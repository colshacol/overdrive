{"version":3,"sources":["setup.js","global.store.js","projects.store.js","components/Box.js","components/Breadcrumbs.js","hooks/useBreadcrumbs.js","components/Button.js","stores/userStore.js","utilities/createContextStore.js","services/api/v0.js","components/Link.js","SceneHeader.js","components/Spacer.js","components/TextInput.js","components/Logo.js","pages/LogIn/index.js","components/SmallLabel.js","components/Page.js","pages/Parcels/ParcelDataCards.js","components/Table.js","pages/Parcels/ParcelsTable.js","pages/Parcels/index.js","components/Card.js","hooks/useProjectsForUser.js","pages/Home/index.js","hooks/useCurrentProject.js","hooks/useParcel.js","hooks/useTitle.js","pages/Parcels/ProjectParcelTitleView.js","pages/Parcels/ProjectParcelView.js","hooks/useTitles.js","hooks/useParcelsForProject.js","pages/Parcels/ProjectParcelsView.js","pages/Parcels/ProjectRecordsView.js","pages/Parcels/ProjectView.js","pages/People/PeopleTable.js","pages/People/index.js","pages/Marketing/index.js","pages/Accounting/index.js","pages/TitlePlant/TitleTable.js","hooks/useStatesWithParcels.js","hooks/useStateCountiesWithParcels.js","pages/TitlePlant/index.js","Router.js","index.js"],"names":["window","__env","serverUrl","location","href","includes","Context","React","Provider","props","_useLocation","useLocation","_useLocation2","Object","slicedToArray","setLocation","_React$useState","_React$useState2","isUserAuthenticated","setIsUserAuthenticated","_React$useState3","_React$useState4","user","setUser","_React$useState5","currentProjectID","undefined","currentParcelID","currentTitleID","_React$useState6","routerState","setRouterState","store","setCurrentProjectID","id","state","objectSpread2","concat","setCurrentParcelID","setCurrentTitleID","react","global_store_Context","value","children","useGlobalStore","projects_store_Context","projects","sampleData","getProjectWithID","find","project","ProjectID","useProjects","Box","inline","otherProps","objectWithoutProperties","display","dist_default","a","assign","crumbs","setCrumbs","Breadcrumbs_Context","addCrumb","uid","crumb","toConsumableArray","removeCrumb","filter","Crumb","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","nanoid","inherits","createClass","key","context","contextType","StyledBreadcrumbs","styled","div","_templateObject","Crumbs","map","index","isLastCrumb","style","cursor","onClick","path","text","margin","BreadcrumbsProvider","useBreadcrumbs_Context","console","log","c","hasCrumb","Button","button","Button_templateObject","small","disabled","Ghost","_templateObject2","White","_templateObject3","INITIAL_USER_STATE","isAuthenticated","creator","createContextStore","register","userData","unregister","authenticate","emailAddress","password","wretch","post","json","response","apiV0","then","isSuccess","FullName","FirstName","LastName","UserProvider","useUser","Link","_Link","Link_templateObject","sceneHeaderStyles","backgroundImage","theme","brandBackgroundImage","backgroundSize","backgroundRepeat","height","OverdriveLogo","react_default","createElement","src","maxWidth","marginBottom","SceneHeader","_React$createElement","useState","isAvatarOpen","setAvatarOpen","system","direction","alignItems","justifyContent","className","SceneHeader_OverdriveLogo","header","headerAlign","trigger","name","size","color","footer","reload","open","width","sharp","defineProperty","Box_Box","flexDirection","Spacer","minWidth","minHeight","TextInput","isSelectBoxOpen","setIsSelectBoxOpen","fillWidth","inputPaddingY","slim","inputStyle","paddingTop","paddingBottom","StyledTextInput","label","htmlFor","Popover_default","position","isOpen","isSelecable","content","background","placeholder","onChange","inputClassName","onFocus","onBlur","type","icon","right","defaultProps","isSelectable","TextInput_templateObject","passwordInputStyles","css","TextInput_templateObject2","Logo","viewBox","fill","xmlns","d","Form","setEmailAddress","setPassword","borderRadius","paddingX","Logo_Logo","Spacer_Spacer","TextInput_TextInput","_ref","target","_ref2","variant","LogIn","LogIn_Form","logIn","SmallLabel","PageContainer","Page_templateObject","BodyContainer","Page_templateObject2","NavLink","Page_templateObject3","_templateObject4","NavigationLinks","navigation","routeOrNested","isArray","SmallLabel_SmallLabel","baseRoute","Page","StyledPageNavigation","Page_NavigationLinks","Breadcrumbs_Crumbs","_templateObject5","Navigation","paddingY","borderRight","NavigationItem","Container","BG_IMAGES","black","purple","DataCard","bgImage","paddingLeft","paddingRight","border","backgroundPosition","ParcelDataCards","completed","parcels","parcel","DateCompleted","ParcelDataCards_DataCard","Styles","Table_templateObject","THead","Table_templateObject2","TH","Table_templateObject3","StyledTable","Table_templateObject4","StyledTableTitle","h3","Table_templateObject5","StyledTopRow","_templateObject6","TD","_templateObject7","TableBody","_templateObject8","SortIcons","isSorted","isSortedDesc","chevron_down","top","chevron_up","Table","tableState","useTable","columns","data","useSortBy","useAbsoluteLayout","RenderRow","row","rows","prepareRow","trProps","getRowProps","cells","cell","cellProps","getCellProps","column","render","title","renderTopRow","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","Table_SortIcons","getTableBodyProps","index_esm","itemCount","itemSize","ParcelsTable","globalStore","setIsModalShown","Header","accessor","Table_Table","current","reactjs_popup_es","plus","marginRight","modal","closeOnDocumentClick","close","ParcelsTable_AddParcelModal","STATE_LABEL_MAP","ParcelNumber","ParcelID","Acres","StateCode","County","TownshipName","AssignedTo","DateAssigned","APN","StyledModal","ParcelsTable_templateObject","StyledForm","ParcelsTable_templateObject2","AddParcelModal","setState","event","styled_css_grid_esm","gap","entries","StyledActionsRow","ParcelsTable_templateObject3","Card","Card_templateObject","useProjectsForUser","setProjects","employeeID","EmployeeID","Number","Home","Page_Page","padding","flexWrap","Home_PortalCard","UsersIcon","description","File","TrendingUp","DollarSign","Home_ProjectCard","ProjectCard","components_Card","ProjectName","StyledPortalCard","Home_templateObject","PortalCard","_useLocation3","useCurrentProject","useParcel","parcelID","setParcel","useTitle","titleID","setTitle","StyledDataText","span","ProjectParcelTitleView_templateObject","longText","DataText","ProjectParcelTitleView","params","Breadcrumbs_Crumb","projectID","ProjectParcelTitleView_DataText","DocumentType","InstrumentNumber","BookVolume","EffectiveDate","RecordedDate","CertificationDate","Acreage","Conveyance","Grantee","Grantor","Comments","icons_link","upload_cloud","TitleTable","Cell","truncate","ProjectParcelView_AddTitleModal","ProjectParcelView_templateObject","ProjectParcelView_StyledDataText","MutedText","ProjectParcelView_templateObject2","ProjectParcelView","wouter","component","ParcelView","titles","_useRoute","useRoute","ProjectParcelView_ParcelData","ProjectParcelView_TitleTable","ParcelData","ProjectParcelView_DataText","Township","Range","Meridian","Address","City","State","Zip","LegalDescription","TitleID","DocumentName","CreatedDate","Mapped","CreatedBy","ProjectParcelView_templateObject3","ProjectParcelView_templateObject4","AddTitleModal","ProjectParcelView_StyledModal","ProjectParcelView_StyledForm","_ref3","_ref4","ProjectParcelView_StyledActionsRow","ProjectParcelView_templateObject5","useParcelsForProject","setParcels","PROJECT_NAVIGATION","ProjectParcelsView","ParcelsView","ParcelDataCards_ParcelDataCards","ParcelsTable_ParcelsTable","currentProject","ProjectReportsView","ProjectRecordsView_Navigation","ReportsView","ProjectView","ProjectsStore","PeopleTable","substring","PEOPLE_NAVIGATION","People","PeopleView","PeopleTable_PeopleTable","people","MARKETING_NAVIGATION","Marketing","MarketinvView","ACCOUNTING_NAVIGATION","Accounting","AccountingView","TitleTable_templateObject","TitleTable_templateObject2","TitleTable_templateObject3","useStatesWithParcels","states","setStates","useStateCountiesWithParcels","counties","setCounties","stateCode","NAVIGATION","TitlePlant","TitlePlantView","stateValue","setStateValue","countyValue","setCountyValue","selectedState","setSelectedState","_React$useState7","_React$useState8","setSelectedCounty","TitlePlant_StateSelectInput","onSelectiob","TitlePlant_CountySelectInput","StateSelectInput","selectOptions","CountySelectInput","UnauthenticatedRouter","LogIn_LogIn","AuthenticatedRouter","AuthWrapper","src_App","Router_UnauthenticatedRouter","App","ready","setReady","useRouter","useLayoutEffect","Breadcrumbs_Provider","projects_store_Provider","SceneHeader_SceneHeader","Router_AuthenticatedRouter","rootElement","document","getElementById","ReactDOM","global_store_Provider","useBreadcrumbs_BreadcrumbsProvider","src_AuthWrapper"],"mappings":"iHAAAA,OAAOC,MAAQ,CACbC,UAAWF,OAAOG,SAASC,KAAKC,SAAS,aACrC,wBACA,w/gBCAAC,EAAUC,kBAEHC,EAAW,SAAAC,GAAS,IAAAC,EACCC,cADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,GADcH,EAAA,GAAAA,EAAA,IAAAI,EAGuBT,YAAe,GAHtCU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGxBE,EAHwBD,EAAA,GAGHE,EAHGF,EAAA,GAAAG,EAIPb,aAJOc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAIxBE,EAJwBD,EAAA,GAIlBE,EAJkBF,EAAA,GAAAG,EAMOjB,WAAe,CACnDkB,sBAAkBC,EAClBC,qBAAiBD,EACjBE,oBAAgBF,IATaG,EAAAhB,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAMxBM,EANwBD,EAAA,GAMXE,EANWF,EAAA,GA2CzBG,EAAQ,CACZd,sBACAC,yBACAM,iBAAkBK,EAAYL,iBAC9BE,gBAAiBG,EAAYH,gBAC7BC,eAAgBE,EAAYF,eAC5BK,oBA5B0B,SAAAC,GAC1BH,EAAe,SAAAI,GAAK,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GACfsB,EADe,CAElBV,iBAAkBS,MAGpBnB,EAAW,YAAAsB,OAAaP,EAAYL,iBAAzB,cAuBXa,mBAtCyB,SAAAJ,GACzBH,EAAe,SAAAI,GAAK,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GACfsB,EADe,CAElBR,gBAAiBO,MAGnBnB,EAAW,YAAAsB,OAAaP,EAAYL,iBAAzB,aAAAY,OAAqDH,KAiChEK,kBArBwB,SAAAL,GACxBH,EAAe,SAAAI,GAAK,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GACfsB,EADe,CAElBP,eAAgBM,MAGlBnB,EAAW,YAAAsB,OACGP,EAAYL,iBADf,aAAAY,OAEPP,EAAYH,gBAFL,WAAAU,OAGCH,KAaZJ,cACAR,OACAC,WAGF,OAAOiB,EAAA,cAACC,EAAQjC,SAAT,CAAkBkC,MAAOV,GAAQvB,EAAMkC,WAGnCC,EAAiB,WAC5B,OAAOrC,aAAiBD,YC9DpBA,EAAUC,kBAEHC,EAAW,SAAAC,GAOtB,OACE+B,EAAA,cAACK,EAAQrC,SAAT,CACEkC,MAAO,CAAEI,SAAUC,EAAWD,SAAUE,iBARnB,SAAAd,GACvB,OAAOa,EAAWD,SAASG,KAAK,SAAAC,GAC9B,OAAOA,EAAQC,YAAcjB,OAQ5BzB,EAAMkC,WAKAS,EAAc,WACzB,OAAO7C,aAAiBD,8GCpBb+C,EAAM,SAAA5C,GAAS,IAClB6C,EAA0B7C,EAA1B6C,OAAWC,EADO1C,OAAA2C,EAAA,EAAA3C,CACQJ,EADR,YAEpBgD,EAAUH,EAAS,cAAgB,OAEzC,OAAOd,EAAA,cAACkB,EAAAC,EAAD9C,OAAA+C,OAAA,CAAMH,QAASA,GAAaF,wWCDrC,IAAMjD,EAAUC,kBAEHC,EAAW,SAACC,GAAU,IAAAO,EACLT,WAAe,IADVU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAC1B6C,EAD0B5C,EAAA,GAClB6C,EADkB7C,EAAA,GAyBjC,OACEuB,EAAA,cAACuB,EAAQvD,SAAT,CAAkBkC,MAAO,CAAEmB,SAAQG,SAvBpB,SAACC,EAAKxD,GACCoD,EAAOZ,KAAK,SAACiB,GACjC,OAAOA,EAAMD,MAAQA,KAOvBH,EAAU,SAAC3B,GACT,SAAAE,OAAAxB,OAAAsD,EAAA,EAAAtD,CAAWsB,GAAX,CAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,CAAoBoD,OAAQxD,QAae2D,YAT3B,SAACH,GACnBH,EAAU,SAAC3B,GACT,OAAOA,EAAMkC,OAAO,SAACH,GACnB,OAAOA,EAAMD,MAAQA,SAOtBxD,EAAMkC,WAKA2B,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAA8D,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAA5D,OAAAqE,EAAA,EAAArE,CAAA8D,MAAAH,EAAA3D,OAAAsE,EAAA,EAAAtE,CAAAyD,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAtC,OAAA0C,MACEd,IAAMqB,MADRb,EAAA,OAAA5D,OAAA0E,EAAA,EAAA1E,CAAAyD,EAAAC,GAAA1D,OAAA2E,EAAA,EAAA3E,CAAAyD,EAAA,EAAAmB,IAAA,oBAAA/C,MAAA,WAIIiC,KAAKe,QAAQ1B,SAASW,KAAKV,IAAKU,KAAKlE,SAJzC,CAAAgF,IAAA,uBAAA/C,MAAA,WAQIiC,KAAKe,QAAQtB,YAAYO,KAAKV,OARlC,CAAAwB,IAAA,SAAA/C,MAAA,WAYI,OAAO,SAZX4B,EAAA,CAA2B/D,aAgB3B+D,EAAMqB,YAAcrF,EAEpB,IAAMsF,EAAoBC,IAAOC,IAAVC,IAMX,SAACtF,GAAD,OAAYA,EAAMoD,OAAOiB,OAAS,OAAS,QACvC,SAACrE,GAAD,OAAYA,EAAMoD,OAAOiB,OAAS,OAAS,SAa9CkB,EAAS,SAACvF,GAAU,IAAAC,EACCC,cADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,GADcH,EAAA,GAAAA,EAAA,IAEvBiD,EAAWtD,aAAiBD,GAA5BuD,OAER,OACErB,EAAA,cAACoD,EAAD,CAAmB/B,OAAQA,GACxBA,EAAOoC,IAAI,SAAC/B,EAAOgC,GAClB,IAAMC,EAAcD,IAAUrC,EAAOiB,OAAS,EAE9C,OACEtC,EAAA,cAAAA,EAAA,cACEA,EAAA,mBACE4D,MAAO,CAAEC,OAAQF,EAAc,UAAY,WAC3CG,QAAS,kBAAMvF,EAAYmD,EAAMqC,QAEhCrC,EAAMsC,MAERL,GAAe3D,EAAA,mBAAG4D,MAAO,CAAEK,OAAQ,WAApB,UC5FtBnG,EAAUC,kBAEHmG,EAAsB,SAAAjG,GAAS,IAAAO,EACdT,WAAe,IADDU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACnC6C,EADmC5C,EAAA,GAC3B6C,EAD2B7C,EAAA,GAuB1C,OACEuB,EAAA,cAACmE,EAAQnG,SAAT,CAAkBkC,MAAO,CAAEmB,SAAQG,SAfpB,SAAAE,GACf0C,QAAQC,IAAI,gBACZ/C,EAAS,GAAAzB,OAAAxB,OAAAsD,EAAA,EAAAtD,CAAKgD,GAAL,CAAaK,MAauBE,YAV3B,SAAAF,GAAK,OAAI,WAC3B0C,QAAQC,IAAI,kBACZ/C,EACED,EAAOQ,OAAO,SAAAyC,GACZ,OAAOA,EAAE7C,MAAQC,EAAMD,SAM+B8C,SArB3C,SAAA7C,GACf,OAAOL,EAAOZ,KAAK,SAAA6D,GACjB,OAAOA,EAAE7C,MAAQC,EAAMD,SAoBtBxD,EAAMkC,w7CC3BN,IAAMqE,EAASnB,IAAOoB,OAAVC,IAgBN,SAAAzG,GAAK,OAAKA,EAAM0G,MAAQ,WAAa,aACnC,SAAA1G,GAAK,OAAKA,EAAM0G,MAAQ,OAAS,QACpC,SAAA1G,GAAK,OAAKA,EAAM2G,SAAW,cAAgB,YAYvDJ,EAAOK,MAAQxB,IAAOoB,OAAtBK,IAKgB,SAAA7G,GAAK,OAAKA,EAAM0G,MAAQ,WAAa,aACtC,SAAA1G,GAAK,OAAKA,EAAM0G,MAAQ,OAAS,QACpC,SAAA1G,GAAK,OAAKA,EAAM2G,SAAW,cAAgB,YAQvDJ,EAAOO,MAAQ1B,IAAOoB,OAAtBO,IAIa,SAAA/G,GAAK,OAAKA,EAAM0G,MAAQ,WAAa,aACnC,SAAA1G,GAAK,OAAKA,EAAM0G,MAAQ,OAAS,QAEpC,SAAA1G,GAAK,OAAKA,EAAM2G,SAAW,cAAgB,wBCjDjDK,EAAqB,CACzBC,iBAAiB,KCLQ,SAACC,GAC1B,IAAMrH,EAAUC,kBAYhB,MAAO,CAVU,SAACE,GAChB,IAAMuB,EAAQ2F,EAAQlH,GAEtB,OAAO+B,EAAA,cAAClC,EAAQE,SAAT,CAAkBkC,MAAOV,GAAQvB,EAAMkC,WAG/B,WACf,OAAOpC,aAAiBD,KDFIsH,CAAmB,WAAM,IAAA5G,EAC/BT,WAAekH,GADgBxG,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAChDM,EADgDL,EAAA,GAC1CM,EAD0CN,EAAA,GAGjD4G,EAAWtH,cAAkB,SAACuH,GAClCvG,EAAQ,SAACD,GACP,OAAOT,OAAAuB,EAAA,EAAAvB,CAAA,GACFS,EADL,CAEEoG,iBAAiB,GACdI,MAGN,IAEGC,EAAaxH,cAAkB,WACnCgB,EAAQkG,IACP,IAEGO,EAAezH,cAAkB,SAAC0H,EAAcC,IEzB5B,SAACD,EAAcC,GACzC,OAAOC,YAAOnI,OAAOC,MAAMC,UAAY,4BACpCkI,KAAK,CACJH,eACAC,aAEDG,KAAK,SAACC,GACL,OAAOA,KFmBTC,CAAmBN,EAAcC,GAAUM,KAAK,SAACF,GAC3CA,EAASG,WACXZ,EAASS,EAAShH,SAGrB,IAEGoH,EAAQ,GAAArG,OAAMf,EAAKqH,UAAX,KAAAtG,OAAwBf,EAAKsH,UAE3C,OAAO/H,OAAAuB,EAAA,EAAAvB,CAAA,GACFS,EADL,CAEEoH,WACAb,WACAE,aACAC,sCAhCGa,OAAcC,gJGNd,IAAMC,EAAOlD,YAAOmD,IAAPnD,CAAHoD,KCOXC,GAAoB,CACxBC,gBAAe,OAAA9G,OAAS+G,EAAMC,qBAAf,KACfC,eAAgB,QAChBC,iBAAkB,SAClBC,OAAQ,IAGJC,GAAgB,kBACpBC,EAAA/F,EAAAgG,cAAA,OAAKC,IAAI,iBAAiBxD,MAAO,CAAEyD,SAAU,IAAKC,aAAc,MAGrDC,GAAc,SAACtJ,GAAU,IAAAuJ,EAAAtJ,EACJC,cADIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBK,GADmBH,EAAA,GAAAA,EAAA,IAE9BU,EAAOwH,IAFuB9H,EAGET,IAAM0J,UAAS,GAHjBhJ,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAG7BkJ,EAH6BjJ,EAAA,GAGfkJ,EAHelJ,EAAA,GAKpC,OACEyI,EAAA/F,EAAAgG,cAACS,EAAA,MAAD,CAAOC,UAAU,UACfX,EAAA/F,EAAAgG,cAACS,EAAA,MAAD,CACEC,UAAU,MACVC,WAAW,SACXC,eAAe,gBACfC,UAAU,cACVpE,MAAO8C,IAEPQ,EAAA/F,EAAAgG,cAACS,EAAA,MAAD,CACEE,WAAW,SACXhE,QAAS,kBAAMvF,EAAY,MAC3BqF,MAAO,CAAEC,OAAQ,YAEjBqD,EAAA/F,EAAAgG,cAACc,GAAD,OAEFf,EAAA/F,EAAAgG,cAACS,EAAA,MAAD,CAAOC,UAAU,OACfX,EAAA/F,EAAAgG,cAACS,EAAA,MAAD,CAAOG,eAAe,UACpBb,EAAA/F,EAAAgG,cAACS,EAAA,SAADJ,EAAA,CACEU,OAAQpJ,EAAKoH,SACbiC,YAAY,gBACZC,QACElB,EAAA/F,EAAAgG,cAACS,EAAA,OAAD,CACEhE,MAAO,CAAEC,OAAQ,WACjBwE,KAAMvJ,EAAKoH,SACXoC,KAAK,IACLC,MAAM,UACNzE,QAAS,kBAAM6D,GAAeD,MAGlCc,OACEtB,EAAA/F,EAAAgG,cAAC3C,EAAOK,MAAR,CAAcf,QAAS,kBAAMtG,OAAOG,SAAS8K,WAA7C,WAIFC,KAAMhB,EACNG,UAAU,IACVc,MAAM,KACNC,OAAK,GApBPvK,OAAAwK,EAAA,EAAAxK,CAAAmJ,EAAA,YAqBY,MArBZnJ,OAAAwK,EAAA,EAAAxK,CAAAmJ,EAAA,QAsBQ,MAtBRnJ,OAAAwK,EAAA,EAAAxK,CAAAmJ,EAAA,UAuBU,KAvBVA,GAyBEN,EAAA/F,EAAAgG,cAAC2B,EAAD,CAAKC,cAAc,UACjB7B,EAAA/F,EAAAgG,cAACZ,EAAD,CAAM3I,KAAK,YAAX,WACAsJ,EAAA/F,EAAAgG,cAACZ,EAAD,CAAM3I,KAAK,aAAX,wCCrEHoL,GAAS,SAAC/K,GACrB,OACE+B,EAAA,cAACkB,EAAAC,EAAD,CACEF,QAAQ,cACR0H,MAAK,GAAA9I,OAAK5B,EAAMqK,KAAX,eACLtB,OAAM,GAAAnH,OAAK5B,EAAMqK,KAAX,eACNW,SAAQ,GAAApJ,OAAK5B,EAAMqK,KAAX,eACRY,UAAS,GAAArJ,OAAK5B,EAAMqK,KAAX,mrCCHR,IAAMa,GAAY,SAAClL,GAAU,IAAAO,EACYT,YAAe,GAD3BU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAC3B4K,EAD2B3K,EAAA,GACV4K,EADU5K,EAAA,GAE5BkK,EAAQ1K,EAAMqL,UAAY,OAAS,QACnCC,EAAgBtL,EAAMuL,KAAO,MAAQ,OAErCC,EAAUpL,OAAAuB,EAAA,EAAAvB,CAAA,GACXJ,EAAMwL,WADK,CAEdC,WAAYH,EACZI,cAAeJ,IAGjB,OACEvJ,EAAA,cAAC4J,GAADvL,OAAA+C,OAAA,CACE4G,UAAU,aACN/J,EAFN,CAGE0K,MAAO1K,EAAM0K,OAASA,IAErB1K,EAAM4L,OACL7J,EAAA,cAAAA,EAAA,cACEA,EAAA,uBAAO8J,QAAS7L,EAAMyB,IAAKzB,EAAM4L,QAGrC7J,EAAA,cAAC+J,GAAA5I,EAAD,CACE6I,SAAS,SACTC,OAAQhM,EAAMiM,aAAed,EAC7Be,QAASnK,EAAA,qBAAK4D,MAAO,CAAEwG,WAAY,UAA1B,eAETpK,EAAA,cAAAA,EAAA,cACEA,EAAA,uBACEN,GAAIzB,EAAMyB,GACVQ,MAAOjC,EAAMiC,MACbmK,YAAapM,EAAMoM,YACnBC,SAAUrM,EAAMqM,SAChBtC,UAAW/J,EAAMsM,eACjBC,QAAS,kBAAMvM,EAAMiM,aAAeb,GAAmB,IACvDoB,OAAQ,kBAAMxM,EAAMiM,aAAeb,GAAmB,IACtDzF,MAAO6F,EACPiB,KAAMzM,EAAMyM,OAEbzM,EAAM0M,MACL3K,EAAA,cAAC8I,EAAD,CACEhI,QAAM,EACNkJ,SAAS,WACTY,MAAM,OACN9C,WAAW,SACXd,OAAO,QAEN/I,EAAM0M,UASrBxB,GAAU0B,aAAe,CACvBC,kBAAc5L,GAGhB,IAAM0K,GAAkBvG,IAAOC,IAAVyH,KAGV,SAAC9M,GAAD,OAAWA,EAAM0K,OA4CtB,SAAC1K,GAAD,MAA2B,aAAfA,EAAMyM,KAAsBM,GAAsB,KAI9DA,GAAsBC,YAAHC,MCpHZC,GAAO,SAAAlN,GAClB,OACEiJ,EAAA/F,EAAAgG,cAAA,MAAA9I,OAAA+C,OAAA,CACEuH,MAAM,MACN3B,OAAO,KACPoE,QAAQ,cACJnN,EAJN,CAKEoN,KAAK,OACLC,MAAM,+BAENpE,EAAA/F,EAAAgG,cAAA,QACEoE,EAAE,8kKACFF,KAAK,YCHPG,GAAO,SAACvN,GACZ,IAAMa,EAAOwH,IADS9H,EAEkBT,WAAe,IAFjCU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEfiH,EAFehH,EAAA,GAEDgN,EAFChN,EAAA,GAAAG,EAGUb,WAAe,IAHzBc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGf8G,EAHe7G,EAAA,GAGL6M,EAHK7M,EAAA,GAKtB,OACEmB,EAAA,cAAC8I,EAAD,CACEa,cAAc,OACdhB,MAAM,QACNJ,MAAM,OACNoD,aAAa,MACb7D,WAAW,aACXhH,QAAM,EACN8K,SAAS,OACT7C,cAAc,UAEd/I,EAAA,cAAC6L,GAAD,CAAMjI,MAAO,CAAE+E,MAAO,IAAK3B,OAAQ,UACnChH,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,2DACAA,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC+L,GAAD,CACExB,eAAe,WACf7K,GAAG,QACHmK,MAAM,gBACNQ,YAAY,eACZnK,MAAOuF,EACP6E,SAAU,SAAA0B,GAAA,IAAa9L,EAAb8L,EAAGC,OAAU/L,MAAb,OAA2BuL,EAAgBvL,MAEvDF,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC+L,GAAD,CACExB,eAAe,WACf7K,GAAG,WACHmK,MAAM,WACNQ,YAAY,GACZK,KAAK,WACLxK,MAAOwF,EACP4E,SAAU,SAAA4B,GAAA,IAAahM,EAAbgM,EAAGD,OAAU/L,MAAb,OAA2BwL,EAAYxL,MAEnDF,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACwE,EAAOO,MAAR,CACEoH,QAAQ,QACRrI,QAAS,kBAAMhF,EAAK0G,aAAaC,EAAcC,KAFjD,YAUO0G,GAAQ,SAACnO,GACpB,OACE+B,EAAA,cAAC8I,EAAD,CACEH,MAAM,OACN3B,OAAO,OACPL,gBAAe,OAAA9G,OAAS+G,EAAMC,qBAAf,KACfC,eAAe,QACfC,iBAAiB,YACjBgB,eAAe,SACfD,WAAW,UAEX9H,EAAA,cAACqM,GAAD,CAAMC,MAAOrO,EAAMqO,UCrEZC,GAAa,SAAAtO,GACxB,OACEiJ,EAAA/F,EAAAgG,cAAA,QAAA9I,OAAA+C,OAAA,CAAO4G,UAAU,cAAiB/J,GAC/BA,EAAMkC,+6BCKb,IAAMqM,GAAgBnJ,IAAOC,IAAVmJ,MAObC,GAAgBrJ,IAAOC,IAAVqJ,MAebC,IANuBvJ,IAAOC,IAAVuJ,MAMVxJ,YAAOkD,EAAPlD,CAAHyJ,OAIPC,GAAkB,SAAlBA,EAAmB9O,GACvB,OAAOA,EAAM+O,WAAWvJ,IAAI,SAAAuI,GAA4B,IAAAE,EAAA7N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAA1BnC,EAA0BqC,EAAA,GAAnBe,EAAmBf,EAAA,GACtD,GAAI1J,MAAM0K,QAAQD,GAChB,OACEjN,EAAA,cAACA,EAAA,SAAD,CAAgBiD,IAAG,OAAApD,OAASgK,IAC1B7J,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACmN,GAAD,KAAatD,GACb7J,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SAEbtI,EAAA,cAAC+M,EAAD,CAAiBC,WAAYC,KAMnC,IAAMrP,EACJqP,IAAkBhP,EAAMmP,UACpBnP,EAAMmP,UADV,GAAAvN,OAEO5B,EAAMmP,WAFbvN,OAEyBoN,GAE3B,OACEjN,EAAA,cAACA,EAAA,SAAD,CAAgBiD,IAAG,GAAApD,OAAKjC,EAAL,KAAAiC,OAAagK,IAC9B7J,EAAA,cAAC4M,GAAD,CAAShP,KAAMA,GAAOiM,GACtB7J,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,aAMR+E,GAAO,SAACpP,GACnB,OACE+B,EAAA,cAACwM,GAAD,KACGvO,EAAM+O,YACLhN,EAAA,cAACsN,GAAD,KACEtN,EAAA,cAACuG,EAAD,CAAM3I,KAAK,KAAK,IAAhB,sBACAoC,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACmN,GAAD,mBACAnN,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACuN,GAAD,CACEP,WAAY/O,EAAM+O,WAClBI,UAAWnP,EAAMmP,aAIvBpN,EAAA,cAAC0M,GAAD,KACE1M,EAAA,cAACwN,EAAD,MACCvP,EAAMkC,YAMTmN,GAAuBjK,IAAOC,IAAVmK,MAa1BJ,GAAKK,WAAa,SAACzP,GACjB,OACE+B,EAAA,cAAC8I,EAAD,CACEH,MAAM,QACN3B,OAAO,OACPiC,SAAS,QACT0E,SAAS,OACT/B,SAAS,OACT7C,cAAc,SACdqB,WAAW,QACXwD,YAAY,+BAEZ5N,EAAA,cAACuG,EAAD,CAAM3I,KAAK,KAAK,IAAhB,sBACAoC,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACmN,GAAD,mBACClP,EAAMkC,WAWbkN,GAAKQ,eANkB,SAAC5P,GAAU,IAAAC,EACAC,cADAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAGhC,OAAO4B,EAAA,cAACuG,EAAD,CAAM3I,KAAMK,EAAML,MAAOK,EAAMkC,WAKxCkN,GAAKS,UAAYtB,gBC1HXuB,GAAY,CAChBC,MAAO,uCACPC,OAAQ,wCAGJC,GAAW,SAACjQ,GAChB,IAAMkQ,EAAUJ,GAAU9P,EAAMsK,OAEhC,OACEvI,EAAA,cAAC8I,EAAD,CACE7H,QAAQ,cACRmN,YAAY,OACZC,aAAa,OACb3E,WAAW,MACXC,cAAc,MAEd2E,OAAO,+BACP3H,gBAAiBwH,EACjBI,mBAAoBtQ,EAAMsQ,mBAC1B5C,aAAa,MACb5C,cAAc,UAEd/I,EAAA,cAACmN,GAAD,CACEvJ,MAAO,CACL2E,MAAO,UAGRtK,EAAM+F,MAEThE,EAAA,oBAAI4D,MAAO,CAAE2E,MAAO,UAAYtK,EAAMiC,SAK/BsO,GAAkB,SAACvQ,GAC9B,IAAMwQ,EAAYxQ,EAAMyQ,QAAQ7M,OAAO,SAAC8M,GACtC,OAAOA,EAAOC,gBAKhB,OACE5O,EAAA,cAAC8I,EAAD,KACE9I,EAAA,cAAC6O,GAAD,CACEtG,MAAM,SACNgG,mBAAmB,SACnBvK,KAAK,gBACL9D,MAAOjC,EAAMyQ,QAAQpM,SAEvBtC,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC6O,GAAD,CACEtG,MAAM,SACNvE,KAAK,mBACL9D,MAAOuO,EAAUnM,OACjBiM,mBAAmB,YAErBvO,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC6O,GAAD,CACEtG,MAAM,SACNvE,KAAK,qBACL9D,MAAOjC,EAAMyQ,QAAQpM,OAASmM,EAAUnM,OACxCiM,mBAAmB,2kEC/C3B,IAAMO,GAASzL,IAAOC,IAAVyL,MAYNC,GAAQ3L,IAAOC,IAAV2L,MAWLC,GAAK7L,IAAOC,IAAV6L,MAMFC,GAAc/L,IAAOC,IAAV+L,MAUXC,GAAmBjM,IAAOkM,GAAVC,MAIhBC,GAAepM,IAAOC,IAAVoM,MAUZC,GAAKtM,IAAOC,IAAVsM,KAIS,SAAC3R,GAAD,OAAYA,EAAM6F,QAAU,MAAQ,OAC1C,SAAC7F,GAAD,OAAYA,EAAM6F,QAAU,0BAA4B,WACvD,SAAC7F,GAAD,OAAYA,EAAM6F,QAAU,UAAY,YAG9C+L,GAAYxM,IAAOC,IAAVwM,MAiCTC,GAAY,SAAC9R,GACjB,OAAOA,EAAM+R,SACX/R,EAAMgS,aACJjQ,EAAA,cAACkQ,GAAA,EAAD,CACE5H,KAAM,GACN1E,MAAO,CAAEoG,SAAU,WAAYmG,IAAK,GACpC5H,MAAM,2BAGRvI,EAAA,cAACoQ,GAAA,EAAD,CACE9H,KAAM,GACN1E,MAAO,CAAEoG,SAAU,WAAYmG,IAAK,GACpC5H,MAAM,2BAIV,IAIS8H,GAAQ,SAACpS,GACpB,IAAMqS,EAAaC,aACjB,CACEC,QAASvS,EAAMuS,QACfC,KAAMxS,EAAMwS,MAAQ,IAEtBC,KACAC,MAGIC,EAAY7S,cAChB,SAAAiO,GAAsB,IAAnBtI,EAAmBsI,EAAnBtI,MAAOE,EAAYoI,EAAZpI,MACFiN,EAAMP,EAAWQ,KAAKpN,GAC5B4M,EAAWS,WAAWF,GAEtB,IAAMG,EAAUH,EAAII,YAAY,CAC9BrN,UAKF,OACE5D,EAAA,oBAAA3B,OAAA+C,OAAA,GAAS4P,EAAT,CAAkBhJ,UAAU,OACzB6I,EAAIK,MAAMzN,IAAI,SAAC0N,GACd,IAAMC,EAAYD,EAAKE,eACfvN,EAAYqN,EAAKG,OAAjBxN,QAER,OACE9D,EAAA,cAAC2P,GAADtR,OAAA+C,OAAA,GACMgQ,EADN,CAEEtN,QAASA,EAAU,kBAAMA,EAAQqN,SAAQjS,EACzC8I,UAAU,OAETmJ,EAAKI,OAAO,aAOzB,CAACjB,EAAWS,WAAYT,EAAWQ,OAGrC,OACE9Q,EAAA,cAAC8O,GAAD,KACE9O,EAAA,cAACyP,GAAD,KACEzP,EAAA,cAACsP,GAAD,KAAmBrR,EAAMuT,OACxBvT,EAAMwT,cAAgBxT,EAAMwT,aAAaxT,EAAOqS,IAEnDtQ,EAAA,cAACoP,GAAD/Q,OAAA+C,OAAA,GAAiBkP,EAAWoB,gBAA5B,CAA6C1J,UAAU,UACrDhI,EAAA,cAACgP,GAAD,CAAOhH,UAAU,SACdsI,EAAWqB,aAAalO,IAAI,SAACmO,GAAD,OAC3B5R,EAAA,oBAAA3B,OAAA+C,OAAA,GAASwQ,EAAYC,sBAArB,CAA4C7J,UAAU,OACnD4J,EAAYE,QAAQrO,IAAI,SAAC6N,GAAD,OACvBtR,EAAA,cAACkP,GAAD7Q,OAAA+C,OAAA,CACE4G,UAAU,MACNsJ,EAAOS,eAAeT,EAAOU,yBAEhCV,EAAOC,OAAO,UAAW,IAC1BvR,EAAA,0BACEA,EAAA,cAACiS,GAAcX,WAQ3BtR,EAAA,cAAC6P,GAADxR,OAAA+C,OAAA,GAAekP,EAAW4B,oBAA1B,CAA+ClK,UAAU,UACvDhI,EAAA,cAACmS,GAAA,EAAD,CACEnK,UAAU,mBACVhB,OAAQ/I,EAAM+I,QAAU,IACxBoL,UAAW9B,EAAWQ,KAAKxO,OAC3B+P,SAAU,GACV1J,MAAM,QAELiI,+qBCvMN,IAAM0B,GAAe,SAACrU,GAAU,IAAAC,EACLC,cADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE/BqU,GAF+BnU,EAAA,GAAAA,EAAA,GAEjBgC,KAFiB5B,EAGGT,YAAe,GAHlBU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGhBgU,GAHgB/T,EAAA,GAAAA,EAAA,IAK/B+R,EAAUzS,SAAa,CAC3B,CACE0U,OAAQ,KACRC,SAAU,WACV/J,MAAO,GACP7E,QAAS,SAACqN,GACRoB,EAAYzS,mBAAmBqR,EAAKjR,SAKxC,CACEuS,OAAQ,gBACRC,SAAU,eACV/J,MAAO,KAIT,CACE8J,OAAQ,MACRC,SAAU,MACV/J,MAAO,KAIT,CACE8J,OAAQ,QACRC,SAAU,QACV/J,MAAO,KAIT,CACE8J,OAAQ,cACRC,SAAU,aACV/J,MAAO,KAIT,CACE8J,OAAQ,gBACRC,SAAU,eAGV/J,MAAO,KAET,CACE8J,OAAQ,iBACRC,SAAU,gBACV/J,MAAO,OAMX,OACE3I,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC2S,GAAD,CACEnB,MAAM,UACNhB,QAASA,EAAQoC,QACjBnC,KAAMxS,EAAMwS,KACZzJ,OAAQ,IACRyK,aAAc,SAACxT,EAAOqS,GAAR,OACZtQ,EAAA,cAAC8I,EAAD,CACEhI,QAAM,EACN6H,MAAM,OACNZ,eAAe,WACfD,WAAW,UAEX9H,EAAA,cAAC6S,GAAA,EAAD,CACEzK,QACEpI,EAAA,cAACwE,EAAD,CAAQG,OAAK,EAACb,QAAS,kBAAM0O,GAAgB,KAC3CxS,EAAA,cAAC8S,GAAA,EAAD,CAAMxK,KAAK,OAAO1E,MAAO,CAAEmP,YAAa,KAD1C,cAKFC,OAAK,EACLC,sBAAoB,GAEnB,SAACC,GAAD,OAAWlT,EAAA,cAACmT,GAAD,CAAgBD,MAAOA,YAS3CE,GAAkB,CACtBC,aAAc,CAAExJ,MAAO,gBAAiBlB,MAAO,GAC/C2K,SAAU,CAAEzJ,MAAO,YAAalB,MAAO,GACvC4K,MAAO,CAAE1J,MAAO,QAASlB,MAAO,GAChC6K,UAAW,CAAE3J,MAAO,QAASlB,MAAO,GACpC8K,OAAQ,CAAE5J,MAAO,SAAUlB,MAAO,GAClC+K,aAAc,CAAE7J,MAAO,gBAAiBlB,MAAO,GAC/CgL,WAAY,CAAE9J,MAAO,cAAelB,MAAO,GAC3CiL,aAAc,CAAE/J,MAAO,gBAAiBlB,MAAO,GAC/CiG,cAAe,CAAE/E,MAAO,iBAAkBlB,MAAO,GACjDkL,IAAK,CAAEhK,MAAO,MAAOlB,MAAO,IAGxBmL,GAAczQ,IAAOC,IAAVyQ,MAgBXC,GAAa3Q,IAAOC,IAAV2Q,MAOVC,GAAiB,SAACjW,GAAU,IAAAW,EACNb,WAAe,CACvCsV,aAAc,GACdC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,WAAY,GACZC,aAAc,GACdhF,cAAe,GACfiF,IAAK,KAXyBhV,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GACzBe,EADyBd,EAAA,GAClBsV,EADkBtV,EAAA,GAc1ByL,EAAW,SAACrH,GAAD,OAAS,SAACmR,GAAU,IAC3BlU,EAAUkU,EAAMnI,OAAhB/L,MACRiU,EAAS,SAACxU,GAAD,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GACJsB,EADItB,OAAAwK,EAAA,EAAAxK,CAAA,GAEN4E,EAAM/C,QAIX,OACEF,EAAA,cAAC8T,GAAD,KACE9T,EAAA,sCACAA,EAAA,cAACgU,GAAD,KACEhU,EAAA,cAACqU,GAAA,EAAD,CAAM7D,QAAS,EAAG8D,IAAI,OAAO1Q,MAAO,CAAE+E,MAAO,SAC1CtK,OAAOkW,QAAQ5U,GAAO8D,IAAI,SAAAuI,GAAA,IAAAE,EAAA7N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAAE/I,EAAFiJ,EAAA,GAAOhM,EAAPgM,EAAA,UACzBlM,EAAA,cAACqU,GAAA,EAAD,CAAM1L,MAAOyK,GAAgBnQ,GAAK0F,OAChC3I,EAAA,cAAC+L,GAAD,CACEpD,MAAM,OACNkB,MAAOuJ,GAAgBnQ,GAAK4G,MAC5B3J,MAAOA,EACPoK,SAAUA,EAASrH,UAM7BjD,EAAA,cAACwU,GAAD,KACExU,EAAA,cAACwE,EAAOK,MAAR,CAAcf,QAAS7F,EAAMiV,OAA7B,UACAlT,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACwE,EAAD,CAAQV,QAAS7F,EAAMiV,OAAvB,aAMFsB,GAAmBnR,IAAOC,IAAVmR,UCnLClU,EAAWmO,mrBCRlC,IA0BegG,GA1BFrR,IAAOC,IAAVqR,MCEGC,GAAqB,WAAM,IAAApW,EACNT,WAAe,IADTU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAC/B8B,EAD+B7B,EAAA,GACrBoW,EADqBpW,EAAA,GAEhCK,EAAOwH,IAQb,OANAvI,YAAgB,WdIoB,IAAC+W,KcHNhW,EAAKiW,WdI7BpP,YAAOnI,OAAOC,MAAMC,UAAY,kCACpCkI,KAAK,CACJkP,WAAYE,OAAOF,KAEpBjP,KAAK,SAACC,GACL,OAAIA,EAASG,WACX7B,QAAQC,IAAI,2BAA4ByB,GACjCA,EAASxF,UAGXwF,KcdqCE,KAAK,SAAC1F,GAClDuU,EAAYvU,MAEb,CAACxB,EAAKiW,aAEFzU,+qBCcF,IAAM2U,GAAO,SAAChX,GACnB,IAAMa,EAAOwH,IACPhG,EAAWsU,KAEjB,OACE5U,EAAA,cAACkV,GAAD,CAAM1D,MAAM,aACVxR,EAAA,yBACEA,EAAA,yCACAA,EAAA,wBAAKlB,EAAKoH,WAEZlG,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC8I,EAAD,CAAK8C,SAAS,OAAO+B,SAAS,OAAO5E,cAAc,UACjD/I,EAAA,gCAEAA,EAAA,cAAC8I,EAAD,CAAKqM,QAAQ,OAAOC,SAAS,QAC3BpV,EAAA,cAACqV,GAAD,CACEzX,KAAK,UACL+M,KAAM2K,KACN9D,MAAM,SACN+D,YAAY,sBAEdvV,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACqV,GAAD,CACEzX,KAAK,cACL+M,KAAM6K,KACNhE,MAAM,cACN+D,YAAY,mBAEdvV,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACqV,GAAD,CACEzX,KAAK,aACL+M,KAAM8K,KACNjE,MAAM,YACN+D,YAAY,iBAEdvV,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACqV,GAAD,CACEzX,KAAK,cACL+M,KAAM+K,KACNlE,MAAM,aACN+D,YAAY,mBAIlBvV,EAAA,cAAC8I,EAAD,CAAK8C,SAAS,OAAO+B,SAAS,OAAO5E,cAAc,UACjD/I,EAAA,cAAC8I,EAAD,KACE9I,EAAA,qCAEFA,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC8I,EAAD,CAAKqM,QAAQ,OAAOC,SAAS,QAC1B9U,EAASmD,IAAI,SAAC/C,GAAD,OACZV,EAAA,cAAC2V,GAADtX,OAAA+C,OAAA,GAAiBV,EAAjB,CAA0BuC,IAAKvC,EAAQC,mBAQ7CiV,GAAc,SAAC3X,GAAU,IAAAC,EACGC,cADHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACZK,GADYH,EAAA,GAAAA,EAAA,IAEvBmU,EAAcnS,IAEpB,OACEJ,EAAA,cAAC6V,GAAD,CACE/R,QAAS,WACPyO,EAAY9S,oBAAoBxB,EAAM0C,WACtCpC,EAAW,YAAAsB,OAAa5B,EAAM0C,UAAnB,cAEbsC,IAAKhF,EAAM0C,UACXiD,MAAO,CAAEqF,SAAU,MAAOhF,OAAQ,kBAElCjE,EAAA,cAAC8I,EAAD,CAAKC,cAAc,UACjB/I,EAAA,wBAAK/B,EAAM6X,gBAObC,GAAmB1S,IAAOC,IAAV0S,MA4BhBC,GAAa,SAAChY,GAAU,IAAAiY,EACJ/X,cAAfI,EADmBF,OAAAC,EAAA,EAAAD,CAAA6X,EAAA,MAG5B,OACElW,EAAA,cAAC+V,GAAD,CAAkBjS,QAAS,kBAAMvF,EAAYN,EAAML,QACjDoC,EAAA,cAAC/B,EAAM0M,KAAP,CAAYrC,KAAM,KAClBtI,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,yBACEA,EAAA,wBAAK/B,EAAMuT,OACXxR,EAAA,uBAAI/B,EAAMsX,gBC9ILY,GAAoB,WAC/B,IAAM5D,EAAcnS,IAGpB,OAFsBQ,IACQJ,iBAAiB+R,EAAYtT,uCCHhDmX,GAAY,SAACC,GAAa,IAAA7X,EACTT,WAAe,IADNU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAC9BmQ,EAD8BlQ,EAAA,GACtB6X,EADsB7X,EAAA,GASrC,OANAV,YAAgB,YjBqBO,SAACsY,GACxB,OAAO1Q,YAAOnI,OAAOC,MAAMC,UAAY,qBACpCkI,KAAK,CACJyQ,SAAUrB,OAAOqB,KAElBxQ,KAAK,SAACC,GACL,OAAIA,EAASG,WACX7B,QAAQC,IAAI,cAAeyB,GACpBA,EAAS6I,QAGX7I,KiB/BTC,CAAgBsQ,GAAUrQ,KAAK,SAAC2I,GAC9B2H,EAAU3H,MAEX,CAAC0H,IAEG1H,uBCTI4H,GAAW,SAACC,GAAY,IAAAhY,EACTT,WAAe,IADNU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAC5BgT,EAD4B/S,EAAA,GACrBgY,EADqBhY,EAAA,GASnC,OANAV,YAAgB,YlBmDM,SAACyY,GACvB,OAAO7Q,YAAOnI,OAAOC,MAAMC,UAAY,oBACpCkI,KAAK,CACJ4Q,QAASxB,OAAOwB,KAEjB3Q,KAAK,SAACC,GACL,OAAIA,EAASG,WACX7B,QAAQC,IAAI,aAAcyB,GACnBA,EAAS0L,OAGX1L,KkB7DTC,CAAeyQ,GAASxQ,KAAK,SAACwL,GAC5BiF,EAASjF,MAEV,CAACgF,IAEGhF,yTCcT,IAAMkF,GAAiBrT,IAAOsT,KAAVC,KAKT,SAAC3Y,GAAD,OAAYA,EAAM4Y,SAAW,OAAS,QACpC,SAAC5Y,GAAD,OAAYA,EAAM4Y,SAAW,SAAW,KAClC,SAAC5Y,GAAD,OACfA,EAAM4Y,SAAW,oBAAsB,SASrCC,GAAW,SAAC7Y,GAChB,OACE+B,EAAA,cAAC0W,GAAmBzY,EAClB+B,EAAA,0BAAO/B,EAAM4L,OACb7J,EAAA,uBAAI/B,EAAMiC,SAKH6W,GAAyB,SAAC9Y,GACrC,IAAMuT,EAAQ+E,GAAStY,EAAM+Y,OAAOR,SAEpC,OACExW,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACiX,EAAD,CACElT,KAAI,YAAAlE,OAAc5B,EAAM+Y,OAAOE,UAA3B,aAAArX,OAAgD5B,EAAM+Y,OAAOX,SAA7D,WAAAxW,OAA+E5B,EAAM+Y,OAAOR,SAChGxS,KAAI,UAAAnE,OAAY5B,EAAM+Y,OAAOR,QAAzB,OAENxW,EAAA,iCACAA,EAAA,cAAC8I,EAAD,CACEH,MAAM,OACNwM,QAAQ,OACRC,SAAS,QAGTpV,EAAA,cAACmX,GAAD,CAAUjX,MAAOsR,EAAM4F,cAAgB,MAAOvN,MAAM,kBACpD7J,EAAA,cAACmX,GAAD,CAAUtN,MAAM,gBAAgB3J,MAAOsR,EAAM4F,cAAgB,QAC7DpX,EAAA,cAACmX,GAAD,CACEtN,MAAM,oBACN3J,MAAOsR,EAAM6F,kBAAoB,QAEnCrX,EAAA,cAACmX,GAAD,CAAUtN,MAAM,cAAc3J,MAAOsR,EAAM8F,YAAc,QACzDtX,EAAA,cAACmX,GAAD,CAAUtN,MAAM,OAAO3J,MAAOsR,EAAMnE,MAAQ,QAC5CrN,EAAA,cAACmX,GAAD,CAAUtN,MAAM,iBAAiB3J,MAAOsR,EAAM+F,eAAiB,QAC/DvX,EAAA,cAACmX,GAAD,CAAUtN,MAAM,gBAAgB3J,MAAOsR,EAAMgG,cAAgB,QAC7DxX,EAAA,cAACmX,GAAD,CACEtN,MAAM,qBACN3J,MAAOsR,EAAMiG,mBAAqB,QAEpCzX,EAAA,cAACmX,GAAD,CAAUtN,MAAM,UAAU3J,MAAOsR,EAAMkG,SAAW,QAClD1X,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACmX,GAAD,CACEN,UAAQ,EACRhN,MAAM,aACN3J,MAAOsR,EAAMmG,YAAc,QAE7B3X,EAAA,cAACmX,GAAD,CAAUN,UAAQ,EAAChN,MAAM,UAAU3J,MAAOsR,EAAMoG,SAAW,QAC3D5X,EAAA,cAACmX,GAAD,CAAUN,UAAQ,EAAChN,MAAM,UAAU3J,MAAOsR,EAAMqG,SAAW,QAC3D7X,EAAA,cAACmX,GAAD,CAAUN,UAAQ,EAAChN,MAAM,WAAW3J,MAAOsR,EAAMsG,UAAY,SAE/D9X,EAAA,cAAC8I,EAAD,CAAKH,MAAM,OAAOwM,QAAQ,OAAOpN,eAAe,YAC9C/H,EAAA,cAACwE,EAAD,KACExE,EAAA,cAAC+X,GAAA,EAAD,CAAMzP,KAAK,OAAO1E,MAAO,CAAEmP,YAAa,MAD1C,eAIA/S,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACwE,EAAD,KACExE,EAAA,cAACgY,GAAA,EAAD,CAAa1P,KAAK,OAAO1E,MAAO,CAAEmP,YAAa,MADjD,mnCCnER,IAAMkF,GAAa,SAACha,GAClB,IAAMsU,EAAcnS,IADQlC,EAEIC,cAFJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAItBsS,GAJsBpS,EAAA,GAAAA,EAAA,GAIZL,SAAa,CAC3B,CACE0U,OAAQ,KACRC,SAAU,UACV/J,MAAO,GACP7E,QAAS,SAACqN,GACRoB,EAAYxS,kBAAkBoR,EAAKjR,SAGvC,CACEuS,OAAQ,SACRC,SAAU,SACV/J,MAAO,KAKT,CACE8J,OAAQ,UACRC,SAAU,UACV/J,MAAO,IACPuP,KAAM,SAAAlM,GAAA,IAAW9L,EAAX8L,EAAGmF,KAAQjR,MAAX,OAAyBiY,KAASjY,EAAO,MAEjD,CACEuS,OAAQ,UACRC,SAAU,UACV/J,MAAO,KAET,CACE8J,OAAQ,gBACRC,SAAU,eACV/J,MAAO,KAET,CACE8J,OAAQ,iBACRC,SAAU,gBACV/J,MAAO,KAET,CACE8J,OAAQ,gBACRC,SAAU,eACV/J,MAAO,QAIX,OACE3I,EAAA,cAAC2S,GAAD,CACE3L,OAA4B,GAApB/I,EAAMwS,KAAKnO,OACnBkP,MAAM,SACNhB,QAASA,EAAQoC,QACjBnC,KAAMxS,EAAMwS,KACZgB,aAAc,SAACxT,EAAOqS,GAAR,OACZtQ,EAAA,cAAC8I,EAAD,CAAKhI,QAAM,EAAC6H,MAAM,OAAOZ,eAAe,WAAWD,WAAW,UAC5D9H,EAAA,cAAC6S,GAAA,EAAD,CACEzK,QACEpI,EAAA,cAACwE,EAAD,CAAQG,OAAK,GACX3E,EAAA,cAAC8S,GAAA,EAAD,CAAMxK,KAAK,OAAO1E,MAAO,CAAEmP,YAAa,KAD1C,aAKFC,OAAK,EACLC,sBAAoB,GAEnB,SAACC,GAAD,OAAWlT,EAAA,cAACoY,GAAD,CAAelF,MAAOA,WAQxCwD,GAAiBrT,IAAOsT,KAAV0B,KAKT,SAACpa,GAAD,OAAYA,EAAM4Y,SAAW,OAAS,QACpC,SAAC5Y,GAAD,OAAYA,EAAM4Y,SAAW,SAAW,KAClC,SAAC5Y,GAAD,OACfA,EAAM4Y,SAAW,oBAAsB,SASrCC,GAAW,SAAC7Y,GAChB,OACE+B,EAAA,cAACsY,GAAmBra,EAClB+B,EAAA,0BAAO/B,EAAM4L,OACb7J,EAAA,uBAAI/B,EAAMiC,SAKVqY,GAAYlV,IAAOsT,KAAV6B,MAMFC,GAAoB,SAACxa,GAChC,OACE+B,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACiX,EAAD,CACElT,KAAI,YAAAlE,OAAc5B,EAAM+Y,OAAOE,UAA3B,aAAArX,OAAgD5B,EAAM+Y,OAAOX,UACjErS,KAAI,WAENhE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CACE3U,KAAK,wCACL4U,UAAWC,KAEb5Y,EAAA,cAAC0Y,EAAA,EAAD,CACE3U,KAAK,uDACL4U,UAAW5B,QAOf6B,GAAa,SAAC3a,GAClB,IAAM4a,EC7JCA,SD4JqBC,EAEVC,YAAS,yCACrBpK,GAHsBtQ,OAAAC,EAAA,EAAAD,CAAAya,EAAA,MAGb1C,GAAUpB,OAAO/W,EAAM+Y,OAAOX,YAE7C,OACErW,EAAA,cAAAA,EAAA,cACEA,EAAA,kCACSA,EAAA,cAACuY,GAAD,YAAgBta,EAAM+Y,OAAOX,WAEtCrW,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACZqG,EAAO2E,UAAYtT,EAAA,cAACgZ,GAAD,CAAYrK,OAAQA,IACxC3O,EAAA,cAACiZ,GAAD,CAAYxI,KAAMoI,MAKlBK,GAAa,SAAAhN,GAAgB,IAAbyC,EAAazC,EAAbyC,OACpB,OACE3O,EAAA,cAAC8I,EAAD,CACEH,MAAM,OACNwM,QAAQ,OACRC,SAAS,OACTrN,eAAe,iBAEf/H,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,QAAQ3J,MAAOyO,EAAO6E,WAAa,QACnDxT,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,SAAS3J,MAAOyO,EAAO8E,QAAU,QACjDzT,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,QAAQ3J,MAAOyO,EAAO4E,OAAS,QAC/CvT,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,YAAY3J,MAAOyO,EAAO2E,UAAY,QACtDtT,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,MAAM3J,MAAOyO,EAAOkF,KAAO,QAC3C7T,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,gBAAgB3J,MAAOyO,EAAO0E,cAAgB,QAC9DrT,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,gBAAgB3J,MAAOyO,EAAO+E,cAAgB,QAC9D1T,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,WAAW3J,MAAOyO,EAAOyK,UAAY,QACrDpZ,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,QAAQ3J,MAAOyO,EAAO0K,OAAS,QAC/CrZ,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,WAAW3J,MAAOyO,EAAO2K,UAAY,QACrDtZ,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,UAAU3J,MAAOyO,EAAO4K,SAAW,QACnDvZ,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,OAAO3J,MAAOyO,EAAO6K,MAAQ,QAC7CxZ,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,QAAQ3J,MAAOyO,EAAO8K,OAAS,QAC/CzZ,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,MAAM3J,MAAOyO,EAAO+K,KAAO,QAC3C1Z,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACmZ,GAAD,CAAUtP,MAAM,cAAc3J,MAAOyO,EAAOgF,YAAc,QAC1D3T,EAAA,cAACmZ,GAAD,CACEvV,MAAO,CAAE+E,MAAO,QAChBkB,MAAM,oBACN3J,MAAOyO,EAAOgL,kBAAoB,UAMpCvG,GAAkB,CACtBwG,QAAS,CAAE/P,MAAO,WAAYlB,MAAO,GACrCoM,WAAY,CAAElL,MAAO,cAAelB,MAAO,GAC3C6O,aAAc,CAAE3N,MAAO,gBAAiBlB,MAAO,GAC/C8O,kBAAmB,CAAE5N,MAAO,qBAAsBlB,MAAO,GACzD4O,cAAe,CAAE1N,MAAO,iBAAkBlB,MAAO,GACjDyO,aAAc,CAAEvN,MAAO,gBAAiBlB,MAAO,GAC/CkR,aAAc,CAAEhQ,MAAO,gBAAiBlB,MAAO,GAC/C2O,WAAY,CAAEzN,MAAO,cAAelB,MAAO,GAC3C0E,KAAM,CAAExD,MAAO,OAAQlB,MAAO,GAC9B+O,QAAS,CAAE7N,MAAO,UAAWlB,MAAO,GACpCkP,QAAS,CAAEhO,MAAO,UAAWlB,MAAO,GACpCiP,QAAS,CAAE/N,MAAO,UAAWlB,MAAO,GACpCgP,WAAY,CAAE9N,MAAO,aAAclB,MAAO,GAC1CmR,YAAa,CAAEjQ,MAAO,eAAgBlB,MAAO,GAC7CoR,OAAQ,CAAElQ,MAAO,SAAUlB,MAAO,GAClCqR,UAAW,CAAEnQ,MAAO,aAAclB,MAAO,IAGrCmL,GAAczQ,IAAOC,IAAV2W,MAgBXjG,GAAa3Q,IAAOC,IAAV4W,MAOVC,GAAgB,SAAClc,GAAU,IAAAO,EACLT,WAAe,CACvC6b,QAAS,GACT7E,WAAY,GACZyC,aAAc,GACdC,kBAAmB,GACnBL,aAAc,GACdyC,aAAc,GACdtC,cAAe,GACfD,WAAY,GACZjK,KAAM,GACNqK,QAAS,GACTG,QAAS,GACTD,QAAS,GACTD,WAAY,GACZmC,YAAa,GACbE,UAAW,GACXD,OAAQ,KAjBqBtb,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACxBmB,EADwBlB,EAAA,GACjB0V,EADiB1V,EAAA,GAoBzB6L,EAAW,SAACrH,GAAD,OAAS,SAACmR,GAAU,IAC3BlU,EAAUkU,EAAMnI,OAAhB/L,MACRiU,EAAS,SAACxU,GAAD,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAA,GACJsB,EADItB,OAAAwK,EAAA,EAAAxK,CAAA,GAEN4E,EAAM/C,QAIX,OACEF,EAAA,cAACoa,GAAD,KACEpa,EAAA,qCACAA,EAAA,cAACqa,GAAD,KACEra,EAAA,cAACqU,GAAA,EAAD,CAAM7D,QAAS,EAAG8D,IAAI,OAAO1Q,MAAO,CAAE+E,MAAO,SAC1CtK,OAAOkW,QAAQ5U,GAAO8D,IAAI,SAAA6W,GAAA,IAAAC,EAAAlc,OAAAC,EAAA,EAAAD,CAAAic,EAAA,GAAErX,EAAFsX,EAAA,GAAOra,EAAPqa,EAAA,UACzBva,EAAA,cAACqU,GAAA,EAAD,CAAM1L,MAAOyK,GAAgBnQ,GAAK0F,OAChC3I,EAAA,cAAC+L,GAAD,CACEpD,MAAM,OACNkB,MAAOuJ,GAAgBnQ,GAAK4G,MAC5B3J,MAAOA,EACPoK,SAAUA,EAASrH,UAM7BjD,EAAA,cAACwa,GAAD,KACExa,EAAA,cAACwE,EAAOK,MAAR,CAAcf,QAAS7F,EAAMiV,OAA7B,UACAlT,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACwE,EAAD,CAAQV,QAAS7F,EAAMiV,OAAvB,aAMFsB,GAAmBnR,IAAOC,IAAVmX,ME7STC,GAAuB,WAAM,IAAAlc,EACVT,WAAe,IADLU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACjCkQ,EADiCjQ,EAAA,GACxBkc,EADwBlc,EAAA,GAEhCQ,EAAqBmB,IAArBnB,iBACFH,EAAOwH,IAUb,OARAvI,YAAgB,WtB6EkB,IAAC+W,EAAYoC,GAAZpC,EsB3EThW,EAAKiW,WtB2EgBmC,EsB3EJjY,EtB4EpC0G,YAAOnI,OAAOC,MAAMC,UAAY,gCACpCkI,KAAK,CACJkP,WAAYE,OAAOF,GACnBoC,UAAWlC,OAAOkC,KAEnBrR,KAAK,SAACC,GACL,OAAIA,EAASG,WACX7B,QAAQC,IAAI,yBAA0ByB,GAC/BA,EAAS4I,SAGX5I,KsBtFNE,KAAK,SAACyK,GACLkK,EAAWlK,MAEd,CAACxR,IAEGyP,GCuBHkM,IAxBiBra,EAAWmO,QAwBP,CACzB,CAAC,UAAW,cAIDmM,GAAqB,SAAC5c,GACjC,IAAMyC,EAAUyV,KAEhB,OACEnW,EAAA,cAACkV,GAAD,CACE1D,MAAK,GAAA3R,OAAKa,EAAQoV,aAClB1I,UAAS,YAAAvN,OAAca,EAAQC,WAC/BqM,WAAY4N,IAEZ5a,EAAA,cAACiX,EAAD,CACElT,KAAI,YAAAlE,OAAca,EAAQC,UAAtB,YACJqD,KAAK,YAGPhE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,8BAA8B4U,UAAWmC,KAErD9a,EAAA,cAAC0Y,EAAA,EAAD,CACE3U,KAAK,wCACL4U,UAAWF,KAEbzY,EAAA,cAAC0Y,EAAA,EAAD,CACE3U,KAAK,qCACL4U,UAAWF,QAOfqC,GAAc,SAAC7c,GACnB,IAAMyQ,EAAUgM,KAEhB,OACE1a,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC8I,EAAD,CAAKf,eAAe,iBAClB/H,EAAA,mCACAA,EAAA,cAAC+a,GAAD,CAAiBrM,QAASA,KAE5B1O,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAACgb,GAAD,CAAcvK,KAAM/B,MCtEpBhB,IAFiBnN,EAAWmO,QAEf,SAAAzQ,GACjB,IAAMgd,EAAiB9E,KAEvB,OACEnW,EAAA,cAACkV,GAAKxH,WAAN,KACE1N,EAAA,cAACkV,GAAKrH,eAAN,CACEjQ,KAAI,YAAAiC,OAAcob,EAAeta,UAA7B,aADN,WAKAX,EAAA,cAACkV,GAAKrH,eAAN,CACEjQ,KAAI,YAAAiC,OAAcob,EAAeta,UAA7B,aADN,WAKAX,EAAA,cAACkV,GAAKrH,eAAN,CAAqBjQ,KAAI,YAAAiC,OAAcob,EAAeta,UAA7B,WAAzB,YAOOua,GAAqB,SAAAjd,GAChC,IAAMyC,EAAUyV,KAEhB,OACEnW,EAAA,cAACkV,GAAD,CAAM1D,MAAK,GAAA3R,OAAKa,EAAQoV,aAAe9I,WAAYhN,EAAA,cAACmb,GAAD,OACjDnb,EAAA,cAACiX,EAAD,CACElT,KAAI,YAAAlE,OAAca,EAAQC,UAAtB,YACJqD,KAAK,YAGPhE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,8BAA8B4U,UAAWyC,QAMvDA,GAAc,SAAAnd,GAClB,OACE+B,EAAA,cAAAA,EAAA,cACEA,EAAA,mCACAA,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,WCtCN+S,GAAc,SAAApd,GAAS,IAAAC,EACFC,cADEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAI5BwC,GAJ4BtC,EAAA,GAAAA,EAAA,GAEZkd,IACFlb,IACJ+V,MAEhB,OACEnW,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACiX,EAAD,CACElT,KAAI,YAAAlE,OAAca,EAAQC,UAAtB,YACJqD,KAAI,YAAAnE,OAAca,EAAQoV,YAAtB,OAEN9V,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CACE3U,KAAK,qCACL4U,UAAWkC,KAEb7a,EAAA,cAAC0Y,EAAA,EAAD,CACE3U,KAAK,8BACL4U,UAAWuC,QC7BRK,GAAc,SAAAtd,GAAS,IAAAC,EACFC,cADEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBK,GADiBH,EAAA,GAAAA,EAAA,IAAAI,GAEd4B,IACoBrC,YAAe,IAHrBU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAK5BgS,GAL4B/R,EAAA,GAAAA,EAAA,GAKlBV,SAAa,CAC3B,CACE0U,OAAQ,KACRC,SAAU,aACV/J,MAAO,GACP7E,QAAS,SAAAqN,GACP5S,EAAW,WAAAsB,OAAYsR,EAAKjR,UAGhC,CACEuS,OAAQ,aACRC,SAAU,YACV/J,MAAO,KAET,CACE8J,OAAQ,YACRC,SAAU,WACV/J,MAAO,KAET,CACE8J,OAAQ,gBACRC,SAAU,eACV/J,MAAO,KAET,CACE8J,OAAQ,cACRC,SAAU,aACV/J,MAAO,KAET,CACE8J,OAAQ,aACRC,SAAU,kBACV/J,MAAO,KAET,CACE8J,OAAQ,WACRC,SAAU,UACV/J,MAAO,KAET,CACE8J,OAAQ,SACRC,SAAU,WACV/J,MAAO,KAET,CACE8J,OAAQ,eACRC,SAAU,aACV/J,MAAO,IACPuP,KAAM,SAAAlM,GAAA,OAAAA,EAAGmF,KAAQjR,MAAoBsb,UAAU,EAAG,SAItD,OACExb,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC2S,GAAD,CACEnB,MAAM,SACNhB,QAASA,EAAQoC,QACjBnC,KAAMxS,EAAMwS,KACZgB,aAAc,SAACxT,EAAOqS,GAAR,OACZtQ,EAAA,cAAC8I,EAAD,CACEhI,QAAM,EACN6H,MAAM,OACNZ,eAAe,WACfD,WAAW,gBCvEjB2T,GAAoB,CACxB,CAAC,SAAU,YAIAC,GAAS,SAAAzd,GACpB,OACE+B,EAAA,cAACkV,GAAD,CAAM1D,MAAM,SAASpE,UAAU,UAAUJ,WAAYyO,IACnDzb,EAAA,cAACiX,EAAD,CAAmBlT,KAAI,UAAaC,KAAK,WAEzChE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,UAAU4U,UAAWgD,QAMnCA,GAAa,SAAA1d,GACjB,OACE+B,EAAA,cAAAA,EAAA,cACEA,EAAA,kCACAA,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC4b,GAAD,CAAanL,KAAMoL,aCzBnBC,GAAuB,CAAC,CAAC,YAAa,eAE/BC,GAAY,SAAA9d,GACvB,OACE+B,EAAA,cAACkV,GAAD,CACE1D,MAAM,YACNpE,UAAU,aACVJ,WAAY8O,IAEZ9b,EAAA,cAACiX,EAAD,CAAmBlT,KAAI,aAAgBC,KAAK,cAE5ChE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,aAAa4U,UAAWqD,QAMtCA,GAAgB,SAAA/d,GACpB,OACE+B,EAAA,cAAAA,EAAA,cACEA,EAAA,uCCrBAic,GAAwB,CAAC,CAAC,aAAc,gBAEjCC,GAAa,SAAAje,GACxB,OACE+B,EAAA,cAACkV,GAAD,CACE1D,MAAM,aACNpE,UAAU,cACVJ,WAAYiP,IAEZjc,EAAA,cAACiX,EAAD,CAAmBlT,KAAI,cAAiBC,KAAK,eAE7ChE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,cAAc4U,UAAWwD,QAMvCA,GAAiB,SAAAle,GACrB,OACE+B,EAAA,cAAAA,EAAA,cACEA,EAAA,6rBC8EcqD,IAAOC,IAAV8Y,MAgBE/Y,IAAOC,IAAV+Y,MA6DShZ,IAAOC,IAAVgZ,MAxKf,ICTMC,GAAuB,WAAM,IAAA/d,EACZT,WAAe,IADHU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACjCge,EADiC/d,EAAA,GACzBge,EADyBhe,EAAA,GASxC,OANAV,YAAgB,W/BiGT4H,YAAOnI,OAAOC,MAAMC,UAAY,gCACpCkI,KAAK,IACLC,KAAK,SAACC,GACL,OAAIA,EAASG,WACX7B,QAAQC,IAAI,yBAA0ByB,GAC/BA,EAAS0W,QAGX1W,I+BxGoBE,KAAK,SAACwW,GACjCC,EAAUD,MAEX,IAEIA,GCVIE,GAA8B,WAAM,IAAAle,EACfT,WAAe,IADAU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACxCme,EADwCle,EAAA,GAC9Bme,EAD8Bne,EAAA,GAS/C,OANAV,YAAgB,WhC8GyB,IAAC8e,EACnClX,YAAOnI,OAAOC,MAAMC,UAAY,uCACpCkI,KAAK,CAAEiX,cACPhX,KAAK,SAACC,GACL,OAAIA,EAASG,WACX7B,QAAQC,IAAI,gCAAiCyB,GACtCA,EAAS6W,UAGX7W,IgCtH2BE,KAAK,SAAC2W,GACxCC,EAAYD,MAEb,IAEIA,GCFHG,GAAa,CAAC,CAAC,cAAe,gBAEvBC,GAAa,SAAC9e,GACzB,OACE+B,EAAA,cAACkV,GAAD,CAAM1D,MAAM,cAAcpE,UAAU,cAAcJ,WAAY8P,IAC5D9c,EAAA,cAACiX,EAAD,CAAmBlT,KAAI,cAAiBC,KAAK,gBAE7ChE,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,cAAc4U,UAAWqE,QAMvCA,GAAiB,SAAC/e,GAAU,IAAAO,EACIT,WAAe,IADnBU,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACzBye,EADyBxe,EAAA,GACbye,EADaze,EAAA,GAAAG,EAEMb,WAAe,IAFrBc,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAEzBue,EAFyBte,EAAA,GAEZue,EAFYve,EAAA,GAAAG,EAGUjB,aAHVsB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAGzBqe,EAHyBhe,EAAA,GAGVie,EAHUje,EAAA,GAAAke,EAIYxf,aAJZyf,EAAAnf,OAAAC,EAAA,EAAAD,CAAAkf,EAAA,GAITE,GAJSD,EAAA,GAAAA,EAAA,IAMhC,OACExd,EAAA,cAAAA,EAAA,cACEA,EAAA,uCACAA,EAAA,cAAC8L,GAAD,CAAQxD,KAAK,SACbtI,EAAA,cAAC8I,EAAD,KACE9I,EAAA,cAAC0d,GAAD,CACExd,MAAO+c,EACPpT,MAAM,QACNQ,YAAY,iBACZC,SAAU,SAAC8J,GAAD,OAAW8I,EAAc9I,EAAMnI,OAAO/L,QAChD4K,cAAY,EACZ6S,YAAaL,IAEdD,GACCrd,EAAA,cAAC4d,GAAD,CACE/T,MAAM,SACNlK,MAAO0d,EACPnd,MAAOid,EACP9S,YAAY,kBACZC,SAAU,SAAC8J,GAAD,OAAWgJ,EAAehJ,EAAMnI,OAAO/L,QACjD4K,cAAY,EACZ6S,YAAaF,OASnBI,GAAmB,SAAC5f,GACxB,IAAMue,EAASD,KAEf,OAAOvc,EAAA,cAAC+L,GAAD1N,OAAA+C,OAAA,GAAenD,EAAf,CAAsB6f,cAAetB,MAGxCuB,GAAoB,SAAC9f,GACzB,IAAM0e,EAAWD,GAA4Bze,EAAM0B,MAAM6T,WAEzD,OAAOxT,EAAA,cAAC+L,GAAD1N,OAAA+C,OAAA,GAAenD,EAAf,CAAsB6f,cAAenB,MC/CjCqB,GAAwB,SAAC/f,GACpC,OAAO+B,EAAA,cAACie,GAAUhgB,IAGPigB,GAAsB,SAACjgB,GAOlC,OACE+B,EAAA,cAAC0Y,EAAA,EAAD,KACE1Y,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,IAAI4U,UAAW1D,KAC3BjV,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,6BAA6B4U,UAAW0C,KACpDrb,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,iBAAiB4U,UAAW+C,KACxC1b,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,oBAAoB4U,UAAWoD,KAC3C/b,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,qBAAqB4U,UAAWuD,KAC5Clc,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,qBAAqB4U,UAAWoE,KAC5C/c,EAAA,cAAC0Y,EAAA,EAAD,CAAO3U,KAAK,WAAZ,qBCDAoa,GAAc,SAAClgB,GAGnB,OAFaqI,IAEDpB,gBAAkBgC,EAAA/F,EAAAgG,cAACiX,GAAD,MAAUlX,EAAA/F,EAAAgG,cAACkX,GAAD,OAGpCC,GAAM,SAACrgB,GACX,IAAMa,EAAOwH,IADQ9H,EAEKT,IAAM0J,UAAS,GAFpBhJ,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEd+f,EAFc9f,EAAA,GAEP+f,EAFO/f,EAAA,GAAAP,EAGWC,cAHXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGJK,GAHIH,EAAA,GAAAA,EAAA,IAINqgB,cASf,OAPAra,QAAQC,IAAI,CAAEvF,SAEdf,IAAM2gB,gBAAgB,WACpBngB,EAAY,KACZigB,GAAS,IACR,IAEID,EACLrX,EAAA/F,EAAAgG,cAACwX,EAAD,KACEzX,EAAA/F,EAAAgG,cAACyX,EAAD,KACE1X,EAAA/F,EAAAgG,cAAC2B,EAAD,CAAKH,MAAM,OAAO3B,OAAO,OAAO+B,cAAc,UAC5C7B,EAAA/F,EAAAgG,cAAC0X,GAAD,MACA3X,EAAA/F,EAAAgG,cAAC2X,GAAD,SAIJ,MAGAC,GAAcC,SAASC,eAAe,QAC5CC,IAAS3N,OAAOrK,EAAA/F,EAAAgG,cA5CK,SAAClJ,GACpB,OACEiJ,EAAA/F,EAAAgG,cAACd,EAAD,KACEa,EAAA/F,EAAAgG,cAACgY,EAAD,KACEjY,EAAA/F,EAAAgG,cAACiY,EAAD,KACElY,EAAA/F,EAAAgG,cAACkY,GAAD,UAuCM,MAAkBN","file":"static/js/main.abcfb10d.chunk.js","sourcesContent":["window.__env = {\n  serverUrl: window.location.href.includes(\"localhost\")\n    ? \"http://localhost:8090\"\n    : \"\",\n}\n","import * as React from \"react\";\r\nimport { useLocation } from \"wouter\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const Provider = props => {\r\n  const [location, setLocation] = useLocation();\r\n\r\n  const [isUserAuthenticated, setIsUserAuthenticated] = React.useState(false);\r\n  const [user, setUser] = React.useState();\r\n\r\n  const [routerState, setRouterState] = React.useState({\r\n    currentProjectID: undefined,\r\n    currentParcelID: undefined,\r\n    currentTitleID: undefined\r\n  });\r\n\r\n  const setCurrentParcelID = id => {\r\n    setRouterState(state => ({\r\n      ...state,\r\n      currentParcelID: id\r\n    }));\r\n\r\n    setLocation(`/project/${routerState.currentProjectID}/parcels/${id}`);\r\n  };\r\n\r\n  const setCurrentProjectID = id => {\r\n    setRouterState(state => ({\r\n      ...state,\r\n      currentProjectID: id\r\n    }));\r\n\r\n    setLocation(`/project/${routerState.currentProjectID}/parcels`);\r\n  };\r\n\r\n  const setCurrentTitleID = id => {\r\n    setRouterState(state => ({\r\n      ...state,\r\n      currentTitleID: id\r\n    }));\r\n\r\n    setLocation(\r\n      `/project/${routerState.currentProjectID}/parcels/${\r\n        routerState.currentParcelID\r\n      }/title/${id}`\r\n    );\r\n  };\r\n\r\n  const store = {\r\n    isUserAuthenticated,\r\n    setIsUserAuthenticated,\r\n    currentProjectID: routerState.currentProjectID,\r\n    currentParcelID: routerState.currentParcelID,\r\n    currentTitleID: routerState.currentTitleID,\r\n    setCurrentProjectID,\r\n    setCurrentParcelID,\r\n    setCurrentTitleID,\r\n    routerState,\r\n    user,\r\n    setUser\r\n  };\r\n\r\n  return <Context.Provider value={store}>{props.children}</Context.Provider>;\r\n};\r\n\r\nexport const useGlobalStore = () => {\r\n  return React.useContext(Context);\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport sampleData from \"./sampleData.json\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const Provider = props => {\r\n  const getProjectWithID = id => {\r\n    return sampleData.projects.find(project => {\r\n      return project.ProjectID === id;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{ projects: sampleData.projects, getProjectWithID }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjects = () => {\r\n  return React.useContext(Context);\r\n};\r\n","import * as React from \"react\";\r\nimport _Box from \"ui-box\";\r\n\r\nexport const Box = props => {\r\n  const { inline, ...otherProps } = props;\r\n  const display = inline ? \"inline-flex\" : \"flex\";\r\n\r\n  return <_Box display={display} {...otherProps} />;\r\n};\r\n","import * as React from \"react\"\r\nimport nanoid from \"nanoid\"\r\nimport { Box } from \"./Box\"\r\nimport { useLocation } from \"wouter\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Context = React.createContext()\r\n\r\nexport const Provider = (props) => {\r\n  const [crumbs, setCrumbs] = React.useState([])\r\n\r\n  const addCrumb = (uid, props) => {\r\n    const existingCrumb = crumbs.find((crumb) => {\r\n      return crumb.uid === uid\r\n    })\r\n\r\n    if (existingCrumb) {\r\n      return\r\n    }\r\n\r\n    setCrumbs((state) => {\r\n      return [...state, { uid, ...props }]\r\n    })\r\n  }\r\n\r\n  const removeCrumb = (uid) => {\r\n    setCrumbs((state) => {\r\n      return state.filter((crumb) => {\r\n        return crumb.uid !== uid\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ crumbs, addCrumb, removeCrumb }}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport class Crumb extends React.Component {\r\n  uid = nanoid()\r\n\r\n  componentDidMount() {\r\n    this.context.addCrumb(this.uid, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.context.removeCrumb(this.uid)\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n\r\nCrumb.contextType = Context\r\n\r\nconst StyledBreadcrumbs = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  /* padding: 0 24px; */\r\n  width: 100%;\r\n\r\n  height: ${(props) => (props.crumbs.length ? \"48px\" : \"16px\")};\r\n  min-height: ${(props) => (props.crumbs.length ? \"48px\" : \"16px\")};\r\n\r\n  p {\r\n    font-weight: 600;\r\n    color: var(--brandDarkPurple);\r\n  }\r\n\r\n  p:last-of-type {\r\n    font-weight: 400;\r\n    color: var(--grayscale8);\r\n  }\r\n`\r\n\r\nexport const Crumbs = (props) => {\r\n  const [location, setLocation] = useLocation()\r\n  const { crumbs } = React.useContext(Context)\r\n\r\n  return (\r\n    <StyledBreadcrumbs crumbs={crumbs}>\r\n      {crumbs.map((crumb, index) => {\r\n        const isLastCrumb = index !== crumbs.length - 1\r\n\r\n        return (\r\n          <>\r\n            <p\r\n              style={{ cursor: isLastCrumb ? \"pointer\" : \"inherit\" }}\r\n              onClick={() => setLocation(crumb.path)}\r\n            >\r\n              {crumb.text}\r\n            </p>\r\n            {isLastCrumb && <p style={{ margin: \"0 12px\" }}>></p>}\r\n          </>\r\n        )\r\n      })}\r\n    </StyledBreadcrumbs>\r\n  )\r\n}\r\n","import * as React from \"react\";\r\nimport { useLocation, useRoute } from \"wouter\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const BreadcrumbsProvider = props => {\r\n  const [crumbs, setCrumbs] = React.useState([]);\r\n\r\n  const hasCrumb = crumb => {\r\n    return crumbs.find(c => {\r\n      return c.uid === crumb.uid;\r\n    });\r\n  };\r\n\r\n  const addCrumb = crumb => {\r\n    console.log(\"adding crumb\");\r\n    setCrumbs([...crumbs, crumb]);\r\n  };\r\n\r\n  const removeCrumb = crumb => () => {\r\n    console.log(\"removing crumb\");\r\n    setCrumbs(\r\n      crumbs.filter(c => {\r\n        return c.uid !== crumb.uid;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{ crumbs, addCrumb, removeCrumb, hasCrumb }}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport const useBreadcrumb = crumb => {\r\n  const context = React.useContext(Context);\r\n\r\n  React.useEffect(() => {\r\n    if (!context.hasCrumb(crumb)) {\r\n      context.addCrumb(crumb);\r\n      return context.removeCrumb(crumb);\r\n    }\r\n  }, [crumb]);\r\n};\r\n\r\nexport const useBreadcrumbs = crumb => {\r\n  return React.useContext(Context);\r\n};\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  background-image: linear-gradient(\r\n    25deg,\r\n    var(--brandDarkPurple),\r\n    var(--brandLightPurple)\r\n  );\r\n\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: 0px 1px 0px -2px rgba(0, 0, 0, 0.01);\r\n  background-position: center center;\r\n  background-size: 100%;\r\n  transition: all 0.15s;\r\n  font-weight: 500;\r\n  color: var(--grayscale0);\r\n  display: inline-flex;\r\n  padding: ${props => (props.small ? \"8px 12px\" : \"10px 14px\")};\r\n  font-size: ${props => (props.small ? \"14px\" : \"16px\")};\r\n  cursor: ${props => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n  border-radius: 2px;\r\n  font-family: \"Red Hat Text\", sans-serif;\r\n  letter-spacing: 0.5px;\r\n\r\n  :hover {\r\n    background-size: 250%;\r\n    background-position: center right;\r\n    box-shadow: 0px 1px 8px -2px var(--brandLightPurple);\r\n  }\r\n`;\r\n\r\nButton.Ghost = styled.button`\r\n  background: none;\r\n  font-weight: 500;\r\n  color: var(--brandLightPurple);\r\n  display: inline-flex;\r\n  /* padding: ${props => (props.small ? \"8px 12px\" : \"10px 14px\")}; */\r\n  font-size: ${props => (props.small ? \"14px\" : \"16px\")};\r\n  cursor: ${props => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n  border: none;\r\n  outline: none;\r\n  /* border-radius: 2px; */\r\n  font-family: \"Red Hat Text\", sans-serif;\r\n  letter-spacing: 0.5px;\r\n`;\r\n\r\nButton.White = styled.button`\r\n  background: #fff;\r\n  color: var(--grayscale10);\r\n  display: inline-flex;\r\n  padding: ${props => (props.small ? \"8px 12px\" : \"10px 14px\")};\r\n  font-size: ${props => (props.small ? \"14px\" : \"16px\")};\r\n  font-weight: 500;\r\n  cursor: ${props => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 2px;\r\n  font-family: \"Red Hat Text\", sans-serif;\r\n  letter-spacing: 0.5px;\r\n`;\r\n","import * as React from \"react\"\nimport wretch from \"wretch\"\nimport createContextStore from \"../utilities/createContextStore\"\n\nimport * as apiV0 from \"../services/api/v0\"\n\nconst INITIAL_USER_STATE = {\n  isAuthenticated: false,\n}\n\nconst [UserProvider, useUser] = createContextStore(() => {\n  const [user, setUser] = React.useState(INITIAL_USER_STATE)\n\n  const register = React.useCallback((userData) => {\n    setUser((user) => {\n      return {\n        ...user,\n        isAuthenticated: true,\n        ...userData,\n      }\n    })\n  }, [])\n\n  const unregister = React.useCallback(() => {\n    setUser(INITIAL_USER_STATE)\n  }, [])\n\n  const authenticate = React.useCallback((emailAddress, password) => {\n    apiV0.authenticate(emailAddress, password).then((response) => {\n      if (response.isSuccess) {\n        register(response.user)\n      }\n    })\n  }, [])\n\n  const FullName = `${user.FirstName} ${user.LastName}`\n\n  return {\n    ...user,\n    FullName,\n    register,\n    unregister,\n    authenticate,\n  }\n})\n\nexport { UserProvider, useUser }\n","import * as React from \"react\"\n\nconst createContextStore = (creator) => {\n  const Context = React.createContext()\n\n  const Provider = (props) => {\n    const store = creator(props)\n\n    return <Context.Provider value={store}>{props.children}</Context.Provider>\n  }\n\n  const useStore = () => {\n    return React.useContext(Context)\n  }\n\n  return [Provider, useStore]\n}\n\nexport { createContextStore }\nexport default createContextStore\n","import wretch from \"wretch\"\n\nexport const authenticate = (emailAddress, password) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/authenticateUser\")\n    .post({\n      emailAddress,\n      password,\n    })\n    .json((response) => {\n      return response\n    })\n}\n\nexport const getProjectsForEmployee = (employeeID) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getProjectsForEmployee\")\n    .post({\n      employeeID: Number(employeeID),\n    })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getProjectsForEmployee: \", response)\n        return response.projects\n      }\n\n      return response\n    })\n}\n\nexport const getParcel = (parcelID) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getParcel\")\n    .post({\n      parcelID: Number(parcelID),\n    })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getParcel: \", response)\n        return response.parcel\n      }\n\n      return response\n    })\n}\n\nexport const getProject = (projectID) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getProject\")\n    .post({\n      projectID: Number(projectID),\n    })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getProject: \", response)\n        return response.project\n      }\n\n      return response\n    })\n}\n\nexport const getTitle = (titleID) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getTitle\")\n    .post({\n      titleID: Number(titleID),\n    })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getTitle: \", response)\n        return response.title\n      }\n\n      return response\n    })\n}\n\nexport const getTitlesForPacel = (employeeID) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getTitlesForPacel\")\n    .post({\n      employeeID: Number(employeeID),\n    })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getTitlesForPacel: \", response)\n        return response.projects\n      }\n\n      return response\n    })\n}\n\nexport const getParcelsForProject = (employeeID, projectID) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getParcelsForProject\")\n    .post({\n      employeeID: Number(employeeID),\n      projectID: Number(projectID),\n    })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getParcelsForProject: \", response)\n        return response.parcels\n      }\n\n      return response\n    })\n}\n\nexport const getStatesWithParcels = () => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getStatesWithParcels\")\n    .post({})\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getStatesWithParcels: \", response)\n        return response.states\n      }\n\n      return response\n    })\n}\n\nexport const getStateCountiesWithParcels = (stateCode) => {\n  return wretch(window.__env.serverUrl + \"/api/v0/getStateCountiesWithParcels\")\n    .post({ stateCode })\n    .json((response) => {\n      if (response.isSuccess) {\n        console.log(\"getStateCountiesWithParcels: \", response)\n        return response.counties\n      }\n\n      return response\n    })\n}\n\n// getStateCountiesWithParcels\n","import * as React from \"react\";\r\nimport { Link as _Link } from \"wouter\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Link = styled(_Link)`\r\n  font-weight: 600;\r\n  color: var(--darkPurple);\r\n`;\r\n","import React from \"react\"\r\nimport { useLocation } from \"wouter\"\r\nimport { Button } from \"./components/Button\"\r\nimport { useUser } from \"./stores/userStore\"\r\n\r\nimport { Stack, Avatar, Popover } from \"@servicetitan/design-system\"\r\n\r\nimport theme from \"./theme.json\"\r\nimport { Link } from \"./components/Link\"\r\nimport { Box } from \"./components/Box\"\r\n\r\nconst sceneHeaderStyles = {\r\n  backgroundImage: `url(${theme.brandBackgroundImage})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"repeat\",\r\n  height: 68,\r\n}\r\n\r\nconst OverdriveLogo = () => (\r\n  <img src=\"/overdrive.png\" style={{ maxWidth: 136, marginBottom: 4 }} />\r\n)\r\n\r\nexport const SceneHeader = (props) => {\r\n  const [location, setLocation] = useLocation()\r\n  const user = useUser()\r\n  const [isAvatarOpen, setAvatarOpen] = React.useState(false)\r\n\r\n  return (\r\n    <Stack direction=\"column\">\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        className=\"p-l-3 p-r-3\"\r\n        style={sceneHeaderStyles}\r\n      >\r\n        <Stack\r\n          alignItems=\"center\"\r\n          onClick={() => setLocation(\"/\")}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <OverdriveLogo />\r\n        </Stack>\r\n        <Stack direction=\"row\">\r\n          <Stack justifyContent=\"center\">\r\n            <Popover\r\n              header={user.FullName}\r\n              headerAlign=\"space-between\"\r\n              trigger={\r\n                <Avatar\r\n                  style={{ cursor: \"pointer\" }}\r\n                  name={user.FullName}\r\n                  size=\"m\"\r\n                  color=\"#f7f5f9\"\r\n                  onClick={() => setAvatarOpen(!isAvatarOpen)}\r\n                />\r\n              }\r\n              footer={\r\n                <Button.Ghost onClick={() => window.location.reload()}>\r\n                  Log Out\r\n                </Button.Ghost>\r\n              }\r\n              open={isAvatarOpen}\r\n              direction=\"t\"\r\n              width=\"xs\"\r\n              sharp\r\n              direction=\"bl\"\r\n              width=\"xs\"\r\n              padding=\"s\"\r\n            >\r\n              <Box flexDirection=\"column\">\r\n                <Link href=\"/account\">Account</Link>\r\n                <Link href=\"/settings\">Settings</Link>\r\n              </Box>\r\n            </Popover>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"ui-box\";\r\n\r\nexport const Spacer = (props) => {\r\n  return (\r\n    <Box\r\n      display=\"inline-flex\"\r\n      width={`${props.size} !important`}\r\n      height={`${props.size} !important`}\r\n      minWidth={`${props.size} !important`}\r\n      minHeight={`${props.size} !important`}\r\n    />\r\n  );\r\n};\r\n","import styled, { css } from \"styled-components\"\r\nimport * as React from \"react\"\r\nimport Popover from \"react-tiny-popover\"\r\n\r\nimport { Box } from \"./Box\"\r\nimport { Spacer } from \"./Spacer\"\r\n\r\nexport const TextInput = (props) => {\r\n  const [isSelectBoxOpen, setIsSelectBoxOpen] = React.useState(false)\r\n  const width = props.fillWidth ? \"100%\" : \"280px\"\r\n  const inputPaddingY = props.slim ? \"8px\" : \"12px\"\r\n\r\n  const inputStyle = {\r\n    ...props.inputStyle,\r\n    paddingTop: inputPaddingY,\r\n    paddingBottom: inputPaddingY,\r\n  }\r\n\r\n  return (\r\n    <StyledTextInput\r\n      className=\"TextInput\"\r\n      {...props}\r\n      width={props.width || width}\r\n    >\r\n      {props.label && (\r\n        <>\r\n          <label htmlFor={props.id}>{props.label}</label>\r\n        </>\r\n      )}\r\n      <Popover\r\n        position=\"bottom\"\r\n        isOpen={props.isSelecable && isSelectBoxOpen}\r\n        content={<div style={{ background: \"white\" }}>HOWDY DUDE</div>}\r\n      >\r\n        <>\r\n          <input\r\n            id={props.id}\r\n            value={props.value}\r\n            placeholder={props.placeholder}\r\n            onChange={props.onChange}\r\n            className={props.inputClassName}\r\n            onFocus={() => props.isSelecable && setIsSelectBoxOpen(true)}\r\n            onBlur={() => props.isSelecable && setIsSelectBoxOpen(false)}\r\n            style={inputStyle}\r\n            type={props.type}\r\n          />\r\n          {props.icon && (\r\n            <Box\r\n              inline\r\n              position=\"absolute\"\r\n              right=\"12px\"\r\n              alignItems=\"center\"\r\n              height=\"100%\"\r\n            >\r\n              {props.icon}\r\n            </Box>\r\n          )}\r\n        </>\r\n      </Popover>\r\n    </StyledTextInput>\r\n  )\r\n}\r\n\r\nTextInput.defaultProps = {\r\n  isSelectable: undefined,\r\n}\r\n\r\nconst StyledTextInput = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  width: ${(props) => props.width};\r\n  flex-direction: column;\r\n\r\n  label {\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n  }\r\n\r\n  input {\r\n    font-size: 16px;\r\n    letter-spacing: 1px;\r\n    font-family: \"Visby\", \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif !important;\r\n    background: transparent;\r\n    padding: 8px 12px;\r\n    width: 100%;\r\n    border-radius: 3px;\r\n    border: 2px solid var(--grayscale4);\r\n    outline: none;\r\n    background: #fff;\r\n    max-height: 47px;\r\n  }\r\n\r\n  input:focus {\r\n    border: 2px solid var(--brandDarkPurple);\r\n  }\r\n\r\n  input::placeholder {\r\n    font-size: 16px;\r\n    letter-spacing: 1px;\r\n    font-family: \"Visby\", \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif !important;\r\n    color: var(--grayscale7);\r\n  }\r\n\r\n  input.onPurple::placeholder {\r\n    color: #fff;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  input.onPurple {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: #fff;\r\n  }\r\n\r\n  input {\r\n    ${(props) => (props.type === \"password\" ? passwordInputStyles : \"\")}\r\n  }\r\n`\r\n\r\nconst passwordInputStyles = css`\r\n  font-size: 22px;\r\n  letter-spacing: 6px;\r\n  font-weight: 900;\r\n`\r\n","import React from \"react\";\n\nexport const Logo = props => {\n  return (\n    <svg\n      width=\"162\"\n      height=\"28\"\n      viewBox=\"0 0 162 28\"\n      {...props}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0.08 17.64C0.08 16.272 0.332 15 0.836 13.824C1.364 12.624 2.072 11.592 2.96 10.728C3.872 9.84 4.94 9.144 6.164 8.64C7.388 8.136 8.696 7.884 10.088 7.884C11.48 7.884 12.788 8.136 14.012 8.64C15.236 9.144 16.292 9.84 17.18 10.728C18.092 11.592 18.8 12.624 19.304 13.824C19.832 15 20.096 16.272 20.096 17.64C20.096 19.008 19.832 20.292 19.304 21.492C18.8 22.668 18.092 23.688 17.18 24.552C16.292 25.416 15.236 26.1 14.012 26.604C12.788 27.108 11.48 27.36 10.088 27.36C8.696 27.36 7.388 27.108 6.164 26.604C4.94 26.1 3.872 25.416 2.96 24.552C2.072 23.688 1.364 22.668 0.836 21.492C0.332 20.292 0.08 19.008 0.08 17.64ZM10.088 23.076C11.528 23.076 12.752 22.548 13.76 21.492C14.768 20.436 15.272 19.152 15.272 17.64C15.272 16.104 14.768 14.808 13.76 13.752C12.752 12.696 11.528 12.168 10.088 12.168C8.648 12.168 7.424 12.696 6.416 13.752C5.408 14.808 4.904 16.104 4.904 17.64C4.904 19.152 5.408 20.436 6.416 21.492C7.424 22.548 8.648 23.076 10.088 23.076ZM28.5445 27L20.4805 8.244H25.8445L30.9925 20.736L36.1045 8.244H41.3605L33.2965 27H28.5445ZM59.4162 24.66C58.2642 25.596 57.0762 26.28 55.8522 26.712C54.6522 27.144 53.3082 27.36 51.8202 27.36C50.4042 27.36 49.0722 27.108 47.8242 26.604C46.6002 26.1 45.5322 25.416 44.6202 24.552C43.7322 23.688 43.0242 22.668 42.4962 21.492C41.9922 20.292 41.7402 19.008 41.7402 17.64C41.7402 16.296 41.9802 15.036 42.4602 13.86C42.9642 12.66 43.6482 11.628 44.5122 10.764C45.3762 9.876 46.3962 9.18 47.5722 8.676C48.7722 8.172 50.0442 7.92 51.3882 7.92C52.7082 7.92 53.9322 8.184 55.0602 8.712C56.2122 9.216 57.1962 9.912 58.0122 10.8C58.8522 11.688 59.5002 12.756 59.9562 14.004C60.4362 15.228 60.6762 16.56 60.6762 18V19.296H46.7082C47.0442 20.472 47.6922 21.42 48.6522 22.14C49.6122 22.86 50.7402 23.22 52.0362 23.22C52.8522 23.22 53.6202 23.088 54.3402 22.824C55.0602 22.56 55.6722 22.188 56.1762 21.708L59.4162 24.66ZM51.2802 11.988C50.1522 11.988 49.1802 12.336 48.3642 13.032C47.5482 13.704 46.9842 14.616 46.6722 15.768H55.8522C55.5402 14.664 54.9642 13.764 54.1242 13.068C53.3082 12.348 52.3602 11.988 51.2802 11.988ZM63.6979 27V8.244H68.6299V10.296C69.2299 9.48 69.9499 8.868 70.7899 8.46C71.6539 8.028 72.6019 7.812 73.6339 7.812C74.1139 7.836 74.5099 7.884 74.8219 7.956C75.1579 8.004 75.4459 8.1 75.6859 8.244V12.564C75.3259 12.396 74.9299 12.276 74.4979 12.204C74.0659 12.108 73.6219 12.06 73.1659 12.06C72.2059 12.06 71.3179 12.3 70.5019 12.78C69.7099 13.26 69.0859 13.956 68.6299 14.868V27H63.6979ZM91.448 27V25.452C90.704 26.052 89.876 26.508 88.964 26.82C88.052 27.108 87.104 27.252 86.12 27.252C84.8 27.252 83.552 27 82.376 26.496C81.224 25.992 80.216 25.308 79.352 24.444C78.488 23.58 77.804 22.56 77.3 21.384C76.82 20.208 76.58 18.948 76.58 17.604C76.58 16.26 76.832 15 77.336 13.824C77.84 12.648 78.524 11.628 79.388 10.764C80.252 9.9 81.272 9.228 82.448 8.748C83.648 8.244 84.92 7.992 86.264 7.992C87.176 7.992 88.064 8.124 88.928 8.388C89.816 8.628 90.632 8.988 91.376 9.468V1.8L96.308 0.719999V27H91.448ZM81.44 17.604C81.44 19.116 81.968 20.4 83.024 21.456C84.08 22.512 85.376 23.04 86.912 23.04C87.824 23.04 88.652 22.884 89.396 22.572C90.164 22.26 90.824 21.816 91.376 21.24V13.932C90.848 13.38 90.188 12.948 89.396 12.636C88.628 12.324 87.8 12.168 86.912 12.168C85.352 12.168 84.044 12.696 82.988 13.752C81.956 14.784 81.44 16.068 81.44 17.604ZM100.19 27V8.244H105.122V10.296C105.722 9.48 106.442 8.868 107.282 8.46C108.146 8.028 109.094 7.812 110.126 7.812C110.606 7.836 111.002 7.884 111.314 7.956C111.65 8.004 111.938 8.1 112.178 8.244V12.564C111.818 12.396 111.422 12.276 110.99 12.204C110.558 12.108 110.114 12.06 109.658 12.06C108.698 12.06 107.81 12.3 106.994 12.78C106.202 13.26 105.578 13.956 105.122 14.868V27H100.19ZM117.298 6.012C116.53 6.012 115.87 5.736 115.318 5.184C114.766 4.632 114.49 3.972 114.49 3.204C114.49 2.436 114.766 1.776 115.318 1.224C115.87 0.671999 116.53 0.395999 117.298 0.395999C118.066 0.395999 118.726 0.671999 119.278 1.224C119.83 1.776 120.106 2.436 120.106 3.204C120.106 3.972 119.83 4.632 119.278 5.184C118.726 5.736 118.066 6.012 117.298 6.012ZM119.782 8.244V27H114.85V8.244H119.782ZM129.759 27L121.695 8.244H127.059L132.207 20.736L137.319 8.244H142.575L134.511 27H129.759ZM160.631 24.66C159.479 25.596 158.291 26.28 157.067 26.712C155.867 27.144 154.523 27.36 153.035 27.36C151.619 27.36 150.287 27.108 149.039 26.604C147.815 26.1 146.747 25.416 145.835 24.552C144.947 23.688 144.239 22.668 143.711 21.492C143.207 20.292 142.955 19.008 142.955 17.64C142.955 16.296 143.195 15.036 143.675 13.86C144.179 12.66 144.863 11.628 145.727 10.764C146.591 9.876 147.611 9.18 148.787 8.676C149.987 8.172 151.259 7.92 152.603 7.92C153.923 7.92 155.147 8.184 156.275 8.712C157.427 9.216 158.411 9.912 159.227 10.8C160.067 11.688 160.715 12.756 161.171 14.004C161.651 15.228 161.891 16.56 161.891 18V19.296H147.923C148.259 20.472 148.907 21.42 149.867 22.14C150.827 22.86 151.955 23.22 153.251 23.22C154.067 23.22 154.835 23.088 155.555 22.824C156.275 22.56 156.887 22.188 157.391 21.708L160.631 24.66ZM152.495 11.988C151.367 11.988 150.395 12.336 149.579 13.032C148.763 13.704 148.199 14.616 147.887 15.768H157.067C156.755 14.664 156.179 13.764 155.339 13.068C154.523 12.348 153.575 11.988 152.495 11.988Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n","import * as React from \"react\"\r\nimport { Box } from \"../../components/Box\"\r\n\r\nimport theme from \"../../theme\"\r\nimport { TextInput } from \"../../components/TextInput\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { Logo } from \"../../components/Logo\"\r\nimport { Button } from \"../../components/Button\"\r\n\r\nimport { useUser } from \"../../stores/userStore\"\r\n\r\nconst Form = (props) => {\r\n  const user = useUser()\r\n  const [emailAddress, setEmailAddress] = React.useState(\"\")\r\n  const [password, setPassword] = React.useState(\"\")\r\n\r\n  return (\r\n    <Box\r\n      paddingBottom=\"48px\"\r\n      width=\"400px\"\r\n      color=\"#fff\"\r\n      borderRadius=\"6px\"\r\n      alignItems=\"flex-start\"\r\n      inline\r\n      paddingX=\"32px\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Logo style={{ width: 260, height: \"auto\" }} />\r\n      <Spacer size=\"16px\" />\r\n      <p>Log in to access your dashboard.</p>\r\n      <Spacer size=\"32px\" />\r\n      <TextInput\r\n        inputClassName=\"onPurple\"\r\n        id=\"email\"\r\n        label=\"Email Address\"\r\n        placeholder=\"dave@foo.com\"\r\n        value={emailAddress}\r\n        onChange={({ target: { value } }) => setEmailAddress(value)}\r\n      />\r\n      <Spacer size=\"16px\" />\r\n      <TextInput\r\n        inputClassName=\"onPurple\"\r\n        id=\"password\"\r\n        label=\"Password\"\r\n        placeholder=\"\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={({ target: { value } }) => setPassword(value)}\r\n      />\r\n      <Spacer size=\"24px\" />\r\n      <Button.White\r\n        variant=\"white\"\r\n        onClick={() => user.authenticate(emailAddress, password)}\r\n      >\r\n        Log In\r\n      </Button.White>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport const LogIn = (props) => {\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      backgroundImage={`url(${theme.brandBackgroundImage})`}\r\n      backgroundSize=\"cover\"\r\n      backgroundRepeat=\"no-repeat\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Form logIn={props.logIn} />\r\n    </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const SmallLabel = props => {\r\n  return (\r\n    <small className=\"SmallLabel\" {...props}>\r\n      {props.children}\r\n    </small>\r\n  );\r\n};\r\n","import * as React from \"react\"\r\n\r\nimport { Box } from \"./Box\"\r\nimport { Spacer } from \"./Spacer\"\r\nimport { useLocation } from \"wouter\"\r\nimport styled from \"styled-components\"\r\nimport { Crumbs } from \"./Breadcrumbs\"\r\nimport { SmallLabel } from \"./SmallLabel\"\r\nimport { Link } from \"./Link\"\r\n\r\nconst PageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst BodyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1550px;\r\n  margin: 0 auto;\r\n  padding: 32px;\r\n`\r\n\r\nconst NestedLinksContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 16px;\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  margin-left: 8px;\r\n`\r\n\r\nconst NavigationLinks = (props) => {\r\n  return props.navigation.map(([label, routeOrNested]) => {\r\n    if (Array.isArray(routeOrNested)) {\r\n      return (\r\n        <React.Fragment key={`nav-${label}`}>\r\n          <Spacer size=\"32px\" />\r\n          <SmallLabel>{label}</SmallLabel>\r\n          <Spacer size=\"24px\" />\r\n          {/* <NestedLinksContainer> */}\r\n          <NavigationLinks navigation={routeOrNested} />\r\n          {/* </NestedLinksContainer> */}\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    const href =\r\n      routeOrNested === props.baseRoute\r\n        ? props.baseRoute\r\n        : `${props.baseRoute}${routeOrNested}`\r\n\r\n    return (\r\n      <React.Fragment key={`${href}-${label}`}>\r\n        <NavLink href={href}>{label}</NavLink>\r\n        <Spacer size=\"24px\" />\r\n      </React.Fragment>\r\n    )\r\n  })\r\n}\r\n\r\nexport const Page = (props) => {\r\n  return (\r\n    <PageContainer>\r\n      {props.navigation && (\r\n        <StyledPageNavigation>\r\n          <Link href=\"/\">{\"<\"} Back to Dashboard</Link>\r\n          <Spacer size=\"48px\" />\r\n          <SmallLabel>NAVIGATION</SmallLabel>\r\n          <Spacer size=\"24px\" />\r\n          <NavigationLinks\r\n            navigation={props.navigation}\r\n            baseRoute={props.baseRoute}\r\n          />\r\n        </StyledPageNavigation>\r\n      )}\r\n      <BodyContainer>\r\n        <Crumbs />\r\n        {props.children}\r\n      </BodyContainer>\r\n    </PageContainer>\r\n  )\r\n}\r\n\r\nconst StyledPageNavigation = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 240px;\r\n  max-width: 240px;\r\n  min-width: 240px;\r\n  padding: 48px 24px;\r\n  padding-top: 24px;\r\n  background: var(--grayscale0);\r\n  border-right: 1px solid var(--darkPurple2);\r\n  box-shadow: 2px 0px 12px -4px var(--darkPurple2);\r\n`\r\n\r\nPage.Navigation = (props) => {\r\n  return (\r\n    <Box\r\n      width=\"240px\"\r\n      height=\"100%\"\r\n      minWidth=\"240px\"\r\n      paddingY=\"24px\"\r\n      paddingX=\"32px\"\r\n      flexDirection=\"column\"\r\n      background=\"white\"\r\n      borderRight=\"2px solid var(--grayscale4)\"\r\n    >\r\n      <Link href=\"/\">{\"<\"} Back to Dashboard</Link>\r\n      <Spacer size=\"32px\" />\r\n      <SmallLabel>NAVIGATION</SmallLabel>\r\n      {props.children}\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst NavigationItem = (props) => {\r\n  const [location, setLocation] = useLocation()\r\n\r\n  return <Link href={props.href}>{props.children}</Link>\r\n}\r\n\r\nPage.NavigationItem = NavigationItem\r\n\r\nPage.Container = PageContainer\r\n","import * as React from \"react\"\r\nimport { Grid, Cell } from \"styled-css-grid\"\r\nimport theme from \"../../theme\"\r\nimport { Box } from \"../../components/Box\"\r\nimport { SmallLabel } from \"../../components/SmallLabel\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\n\r\nconst BG_IMAGES = {\r\n  black: \"url(https://i.imgur.com/aMNP2JA.png)\",\r\n  purple: \"url(https://i.imgur.com/veWfJkI.png)\",\r\n}\r\n\r\nconst DataCard = (props) => {\r\n  const bgImage = BG_IMAGES[props.color]\r\n\r\n  return (\r\n    <Box\r\n      display=\"inline-flex\"\r\n      paddingLeft=\"16px\"\r\n      paddingRight=\"48px\"\r\n      paddingTop=\"8px\"\r\n      paddingBottom=\"6px\"\r\n      // background=\"var(--grayscale10)\"\r\n      border=\"1px solid var(--darkPurple2)\"\r\n      backgroundImage={bgImage}\r\n      backgroundPosition={props.backgroundPosition}\r\n      borderRadius=\"6px\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <SmallLabel\r\n        style={{\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {props.text}\r\n      </SmallLabel>\r\n      <h3 style={{ color: \"white\" }}>{props.value}</h3>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport const ParcelDataCards = (props) => {\r\n  const completed = props.parcels.filter((parcel) => {\r\n    return parcel.DateCompleted\r\n  })\r\n\r\n  //\r\n\r\n  return (\r\n    <Box>\r\n      <DataCard\r\n        color=\"purple\"\r\n        backgroundPosition=\"20% 7%\"\r\n        text=\"Total Parcels\"\r\n        value={props.parcels.length}\r\n      />\r\n      <Spacer size=\"16px\" />\r\n      <DataCard\r\n        color=\"purple\"\r\n        text=\"Complete Parcels\"\r\n        value={completed.length}\r\n        backgroundPosition=\"42% 40%\"\r\n      />\r\n      <Spacer size=\"16px\" />\r\n      <DataCard\r\n        color=\"purple\"\r\n        text=\"Incomplete Parcels\"\r\n        value={props.parcels.length - completed.length}\r\n        backgroundPosition=\"55% 70%\"\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\n// import * as ReactTable from 'react-table'\r\nimport styled from \"styled-components\"\r\nimport { FixedSizeList } from \"react-window\"\r\n\r\nimport {\r\n  useTable,\r\n  useGroupBy,\r\n  useFilters,\r\n  useSortBy,\r\n  useExpanded,\r\n  usePagination,\r\n  useBlockLayout,\r\n  useResizeColumns,\r\n  useAbsoluteLayout,\r\n} from \"react-table\"\r\n\r\nimport { ChevronUp } from \"react-feather\"\r\nimport { ChevronDown } from \"react-feather\"\r\nimport { Spacer } from \"./Spacer\"\r\n\r\nconst Styles = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  overflow-y: hidden;\r\n  box-shadow: 0px 2px 12px -4px var(--darkPurple2);\r\n  transition: all 0.25s;\r\n  border: 1px solid var(--darkPurple2);\r\n  border-bottom: 2px solid var(--grayscale4);\r\n`\r\n\r\nconst THead = styled.div`\r\n  padding: 24px 0 24px;\r\n  /* border-radius: 6px; */\r\n  border-bottom: 1px solid var(--grayscale2);\r\n  box-shadow: 0px -2px 8px 0px var(--lightPurple2);\r\n  border-top: 1px solid var(--grayscale2);\r\n  .th:first-of-type {\r\n    padding-left: 24px;\r\n  }\r\n`\r\n\r\nconst TH = styled.div`\r\n  font-weight: 600;\r\n  user-select: none;\r\n  font-size: 14px;\r\n`\r\n\r\nconst StyledTable = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n\r\n  .tr {\r\n    padding: 8px 0;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledTableTitle = styled.h3`\r\n  min-width: 250px;\r\n`\r\n\r\nconst StyledTopRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 24px 32px;\r\n  position: relative;\r\n  z-index: 50;\r\n  background: #fff;\r\n`\r\n\r\nconst TD = styled.div`\r\n  height: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: ${(props) => (props.onClick ? \"500\" : \"400\")};\r\n  color: ${(props) => (props.onClick ? \"var(--brandLightPurple)\" : \"inherit\")};\r\n  cursor: ${(props) => (props.onClick ? \"pointer\" : \"inherit\")};\r\n`\r\n\r\nconst TableBody = styled.div`\r\n  width: 100% !important;\r\n\r\n  .tr {\r\n    background: hsla(300, 15%, 98%, 1);\r\n    border-bottom: 1px solid var(--grayscale2);\r\n  }\r\n\r\n  .tr .td {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .tr .td:first-of-type {\r\n    padding-left: 24px;\r\n  }\r\n\r\n  .tr .td:last-of-type {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  .tr:not(:last-of-type) {\r\n  }\r\n\r\n  .tr:hover {\r\n    outline: 1px solid #8734a505;\r\n    background-image: linear-gradient(25deg, #faedffb0, #eed4f71f);\r\n  }\r\n\r\n  > div {\r\n    overflow-x: hidden !important;\r\n  }\r\n`\r\n\r\nconst SortIcons = (props) => {\r\n  return props.isSorted ? (\r\n    props.isSortedDesc ? (\r\n      <ChevronDown\r\n        size={16}\r\n        style={{ position: \"relative\", top: 3 }}\r\n        color=\"var(--brandDarkPurple)\"\r\n      />\r\n    ) : (\r\n      <ChevronUp\r\n        size={16}\r\n        style={{ position: \"relative\", top: 3 }}\r\n        color=\"var(--brandDarkPurple)\"\r\n      />\r\n    )\r\n  ) : (\r\n    \"\"\r\n  )\r\n}\r\n\r\nexport const Table = (props) => {\r\n  const tableState = useTable(\r\n    {\r\n      columns: props.columns,\r\n      data: props.data || [],\r\n    },\r\n    useSortBy,\r\n    useAbsoluteLayout\r\n  )\r\n\r\n  const RenderRow = React.useCallback(\r\n    ({ index, style }) => {\r\n      const row = tableState.rows[index]\r\n      tableState.prepareRow(row)\r\n\r\n      const trProps = row.getRowProps({\r\n        style,\r\n      })\r\n\r\n      // console.log(row, trProps);\r\n\r\n      return (\r\n        <div {...trProps} className=\"tr\">\r\n          {row.cells.map((cell) => {\r\n            const cellProps = cell.getCellProps()\r\n            const { onClick } = cell.column\r\n\r\n            return (\r\n              <TD\r\n                {...cellProps}\r\n                onClick={onClick ? () => onClick(cell) : undefined}\r\n                className=\"td\"\r\n              >\r\n                {cell.render(\"Cell\")}\r\n              </TD>\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    },\r\n    [tableState.prepareRow, tableState.rows]\r\n  )\r\n\r\n  return (\r\n    <Styles>\r\n      <StyledTopRow>\r\n        <StyledTableTitle>{props.title}</StyledTableTitle>\r\n        {props.renderTopRow && props.renderTopRow(props, tableState)}\r\n      </StyledTopRow>\r\n      <StyledTable {...tableState.getTableProps()} className=\"table\">\r\n        <THead className=\"thead\">\r\n          {tableState.headerGroups.map((headerGroup) => (\r\n            <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n              {headerGroup.headers.map((column) => (\r\n                <TH\r\n                  className=\"th\"\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                  {column.render(\"Header\")}{\" \"}\r\n                  <span>\r\n                    <SortIcons {...column} />\r\n                  </span>\r\n                </TH>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </THead>\r\n\r\n        <TableBody {...tableState.getTableBodyProps()} className=\"tbody\">\r\n          <FixedSizeList\r\n            className=\"virtualizedTable\"\r\n            height={props.height || 450}\r\n            itemCount={tableState.rows.length}\r\n            itemSize={45}\r\n            width=\"100%\"\r\n          >\r\n            {RenderRow}\r\n          </FixedSizeList>\r\n        </TableBody>\r\n      </StyledTable>\r\n    </Styles>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { Table } from \"../../components/Table\"\r\nimport { useLocation } from \"wouter\"\r\nimport { Box } from \"../../components/Box\"\r\nimport { Button } from \"../../components/Button\"\r\nimport { Plus } from \"react-feather\"\r\nimport { useGlobalStore } from \"../../global.store\"\r\nimport Popup from \"reactjs-popup\"\r\nimport styled from \"styled-components\"\r\nimport { TextInput } from \"../../components/TextInput\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { Grid, Cell } from \"styled-css-grid\"\r\n\r\nexport const ParcelsTable = (props) => {\r\n  const [location, setLocation] = useLocation()\r\n  const globalStore = useGlobalStore()\r\n  const [isModalShown, setIsModalShown] = React.useState(false)\r\n\r\n  const columns = React.useRef([\r\n    {\r\n      Header: \"ID\",\r\n      accessor: \"ParcelID\",\r\n      width: 80,\r\n      onClick: (cell) => {\r\n        globalStore.setCurrentParcelID(cell.value)\r\n      },\r\n      // key: \"id\",\r\n      // isSortable: true\r\n    },\r\n    {\r\n      Header: \"Parcel Number\",\r\n      accessor: \"ParcelNumber\",\r\n      width: 320,\r\n      // key: \"parcelNumber\",\r\n      // isSortable: true\r\n    },\r\n    {\r\n      Header: \"APN\",\r\n      accessor: \"APN\",\r\n      width: 200,\r\n      // key: \"apn\",\r\n      // isSortable: true\r\n    },\r\n    {\r\n      Header: \"Acres\",\r\n      accessor: \"Acres\",\r\n      width: 100,\r\n      // key: \"age\",\r\n      // isSortable: true\r\n    },\r\n    {\r\n      Header: \"Assigned To\",\r\n      accessor: \"AssignedTo\",\r\n      width: 180,\r\n      // key: \"age\",\r\n      // isSortable: true\r\n    },\r\n    {\r\n      Header: \"Date Assigned\",\r\n      accessor: \"DateAssigned\",\r\n      // key: \"dateAssigned\",\r\n      // isSortable: true,\r\n      width: 160,\r\n    },\r\n    {\r\n      Header: \"Date Completed\",\r\n      accessor: \"DateCompleted\",\r\n      width: 160,\r\n      // key: \"dateCompleted\",\r\n      // isSortable: true\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        title=\"Parcels\"\r\n        columns={columns.current}\r\n        data={props.data}\r\n        height={500}\r\n        renderTopRow={(props, tableState) => (\r\n          <Box\r\n            inline\r\n            width=\"100%\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Popup\r\n              trigger={\r\n                <Button small onClick={() => setIsModalShown(true)}>\r\n                  <Plus size=\"18px\" style={{ marginRight: 6 }} />\r\n                  Add Parcel\r\n                </Button>\r\n              }\r\n              modal\r\n              closeOnDocumentClick\r\n            >\r\n              {(close) => <AddParcelModal close={close} />}\r\n            </Popup>\r\n          </Box>\r\n        )}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst STATE_LABEL_MAP = {\r\n  ParcelNumber: { label: \"Parcel Number\", width: 2 },\r\n  ParcelID: { label: \"Parcel ID\", width: 1 },\r\n  Acres: { label: \"Acres\", width: 1 },\r\n  StateCode: { label: \"State\", width: 1 },\r\n  County: { label: \"County\", width: 1 },\r\n  TownshipName: { label: \"Township Name\", width: 2 },\r\n  AssignedTo: { label: \"Assigned To\", width: 2 },\r\n  DateAssigned: { label: \"Date Assigned\", width: 2 },\r\n  DateCompleted: { label: \"Date Completed\", width: 2 },\r\n  APN: { label: \"APN\", width: 2 },\r\n}\r\n\r\nconst StyledModal = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 900px;\r\n  height: 100%;\r\n  min-height: 700px;\r\n  max-height: 800px;\r\n  border-radius: 6px;\r\n  padding: 48px;\r\n  background: var(--grayscale0);\r\n  overflow-y: scroll;\r\n`\r\n\r\nconst StyledForm = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst AddParcelModal = (props) => {\r\n  const [state, setState] = React.useState({\r\n    ParcelNumber: \"\",\r\n    ParcelID: \"\",\r\n    Acres: \"\",\r\n    StateCode: \"\",\r\n    County: \"\",\r\n    TownshipName: \"\",\r\n    AssignedTo: \"\",\r\n    DateAssigned: \"\",\r\n    DateCompleted: \"\",\r\n    APN: \"\",\r\n  })\r\n\r\n  const onChange = (key) => (event) => {\r\n    const { value } = event.target\r\n    setState((state) => ({\r\n      ...state,\r\n      [key]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <StyledModal>\r\n      <h2>Add Parcel</h2>\r\n      <StyledForm>\r\n        <Grid columns={2} gap=\"24px\" style={{ width: \"100%\" }}>\r\n          {Object.entries(state).map(([key, value]) => (\r\n            <Cell width={STATE_LABEL_MAP[key].width}>\r\n              <TextInput\r\n                width=\"100%\"\r\n                label={STATE_LABEL_MAP[key].label}\r\n                value={value}\r\n                onChange={onChange(key)}\r\n              />\r\n            </Cell>\r\n          ))}\r\n        </Grid>\r\n      </StyledForm>\r\n      <StyledActionsRow>\r\n        <Button.Ghost onClick={props.close}>Cancel</Button.Ghost>\r\n        <Spacer size=\"24px\" />\r\n        <Button onClick={props.close}>Submit</Button>\r\n      </StyledActionsRow>\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nconst StyledActionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n`\r\n","import * as React from \"react\";\r\nimport { Page } from \"../../components/Page\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\nimport { ParcelDataCards } from \"./ParcelDataCards\";\r\nimport { useRoute, useLocation, Route, Switch, Link } from \"wouter\";\r\nimport * as ProjectsStore from \"../../projects.store\";\r\nimport { useGlobalStore } from \"../../global.store\";\r\nimport { ParcelsTable } from \"./ParcelsTable\";\r\nimport sampleData from \"../../sampleData.json\";\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\";\r\n\r\nconst projectParcels = sampleData.parcels;\r\n\r\nconst useCurrentProject = () => {\r\n  const globalStore = useGlobalStore();\r\n  const projectsStore = ProjectsStore.useProjects();\r\n  const project = projectsStore.getProjectWithID(globalStore.currentProjectID);\r\n  return project;\r\n};\r\n\r\nexport const ProjectParcelsView = props => {\r\n  const project = useCurrentProject();\r\n\r\n  return (\r\n    <Page title={`${project.ProjectName}`}>\r\n      <Breadcrumbs.Crumb\r\n        path={`/project/${project.ProjectID}/parcels`}\r\n        text=\"Parcels\"\r\n      />\r\n      <h1>Parcels</h1>\r\n      <Spacer size=\"16px\" />\r\n      <ParcelDataCards {...props} />\r\n      <Spacer size=\"32px\" />\r\n      <ParcelsTable data={projectParcels} />\r\n    </Page>\r\n  );\r\n};\r\n\r\n// const List = props => {\r\n//   return (\r\n//     <>\r\n//       <h4>{props.title}</h4>\r\n//       <Spacer size=\"16px\" />\r\n//       <Box width=\"100%\" borderRadius=\"6px\" flexDirection=\"column\">\r\n//         {props.children}\r\n//       </Box>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// List.Item = props => {\r\n//   return (\r\n//     <Box className=\"ListItem\" width=\"100%\" paddingY=\"16px\">\r\n//       {Object.entries(props.data).map(data => (\r\n//         <List.Item.Space label={data[0]} value={data[1]} />\r\n//       ))}\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// List.Item.Space = props => {\r\n//   return (\r\n//     <Box paddingRight=\"48px\" display=\"inline-flex\" flexDirection=\"column\">\r\n//       <SmallLabel>{props.label}</SmallLabel>\r\n//       <Spacer size=\"8px\" />\r\n//       <p>{props.value}</p>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// const Badge = props => {\r\n//   return (\r\n//     <Box className=\"ListItem\" width=\"100%\" paddingY=\"16px\">\r\n//       <Box\r\n//         marginRight=\"48px\"\r\n//         paddingY=\"6px\"\r\n//         borderRadius=\"6px\"\r\n//         flexDirection=\"row\"\r\n//         flexWrap=\"nowrap\"\r\n//         alignItems=\"center\"\r\n//         background=\"#2270ee\"\r\n//         color=\"#fff\"\r\n//       >\r\n//         <SmallLabel>Parcel ID: </SmallLabel>\r\n//         <Spacer size=\"8px\" />\r\n//         <p>{props.id}</p>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// const LIST_ITEM_SPACE_LABEL_STYLE = {\r\n//   opacity: 0.8,\r\n//   fontWeight: 400,\r\n//   // fontSize: \"1.3rem\",\r\n//   letterSpacing: 1\r\n// };\r\n\r\n// const LIST_ITEM_SPACE_VALUE_STYLE = {\r\n//   fontWeight: 500,\r\n//   // fontSize: \"1.3rem\",\r\n//   letterSpacing: 1\r\n// };\r\n\r\n// const ParcelListItemSpace = props => {\r\n//   return (\r\n//     <Box marginRight=\"48px\" paddingY=\"6px\" alignItems=\"center\">\r\n//       {typeof props.label === \"string\" ? (\r\n//         <p style={LIST_ITEM_SPACE_LABEL_STYLE}>{props.label}:</p>\r\n//       ) : (\r\n//         props.label\r\n//       )}\r\n//       <Spacer size=\"8px\" />\r\n//       <p style={LIST_ITEM_SPACE_VALUE_STYLE}>{props.value}</p>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// const ParcelListItemIdSpace = props => {\r\n//   return (\r\n//     <Box marginRight=\"48px\" paddingY=\"6px\">\r\n//       <h4 style={{ opacity: 0.5, fontWeight: 500 }}>ID: </h4>\r\n//       <Spacer size=\"8px\" />\r\n//       <h4>{props.id}</h4>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// const ParcelListItem = props => {\r\n//   return (\r\n//     <Box\r\n//       className=\"ListItem\"\r\n//       width=\"100%\"\r\n//       paddingY=\"16px\"\r\n//       paddingX=\"24px\"\r\n//       marginBottom=\"16px\"\r\n//       background=\"#ffffff\"\r\n//       flexDirection=\"column\"\r\n//     >\r\n//       <Box>\r\n//         <ParcelListItemIdSpace id={props.id} />\r\n//         <ParcelListItemSpace label=\"Number\" value={props.number} />\r\n//         <ParcelListItemSpace label=\"APN\" value={props.apn} />\r\n//         <ParcelListItemSpace label=\"Acres\" value={props.acres} />\r\n//       </Box>\r\n//       <Box>\r\n//         <ParcelListItemSpace\r\n//           label={\r\n//             <Box>\r\n//               <User size={16} />\r\n//             </Box>\r\n//           }\r\n//           value={props.assignedTo}\r\n//         />\r\n//         <ParcelListItemSpace label=\"Date Assigned\" value={props.dateAssigned} />\r\n//         <ParcelListItemSpace\r\n//           label=\"Date Completed\"\r\n//           value={props.dateCompleted || \"N/A\"}\r\n//         />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// \"ParcelID\": 11,\r\n// \"Acres\": 1.59265e2,\r\n// \"StateCode\": \"CO\",\r\n// \"County\": \"CO\",\r\n// \"Section\": \"24\",\r\n// \"Township\": \"645\",\r\n// \"TownshipName\": \"Plain\",\r\n// \"Range\": \"184E\",\r\n// \"APN\": \"123-464\",\r\n// \"Meridian\": \"22\",\r\n// \"Region\": \"Permian\"\r\n\r\n// const parcelsTableColumns = [\r\n//   {\r\n//     title: \"ID\",\r\n//     dataIndex: \"ParcelID\",\r\n//     key: \"id\",\r\n//     isSortable: true\r\n//   },\r\n//   {\r\n//     title: \"Parcel Number\",\r\n//     dataIndex: \"ParcelNumber\",\r\n//     key: \"parcelNumber\",\r\n//     isSortable: true\r\n//   },\r\n//   {\r\n//     title: \"APN\",\r\n//     dataIndex: \"APN\",\r\n//     key: \"apn\",\r\n//     isSortable: true\r\n//   },\r\n//   {\r\n//     title: \"Acres\",\r\n//     dataIndex: \"Acres\",\r\n//     key: \"age\",\r\n//     isSortable: true\r\n//   },\r\n//   {\r\n//     title: \"Date Assigned\",\r\n//     dataIndex: \"DateAssigned\",\r\n//     key: \"dateAssigned\",\r\n//     isSortable: true\r\n//   },\r\n//   {\r\n//     title: \"Date Completed\",\r\n//     dataIndex: \"DateCompleted\",\r\n//     key: \"dateCompleted\",\r\n//     isSortable: true\r\n//   }\r\n// ];\r\n\r\n// const ParcelsTable = props => {\r\n//   const globalStore = useGlobalStore();\r\n\r\n//   return (\r\n//     <Table\r\n//       title=\"Parcel Activity\"\r\n//       columns={parcelsTableColumns}\r\n//       data={props.parcels}\r\n//       onRowClick={row => globalStore.setCurrentParcelID(row.title)}\r\n//     />\r\n//   );\r\n// };\r\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  position: relative;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  border-radius: 6px;\n  height: 100px;\n  cursor: pointer;\n  padding: 16px 32px;\n  background: #fff;\n  background-position: 20% 7%;\n  box-shadow: 0px 2px 12px -4px var(--darkPurple2);\n  transition: all 0.25s;\n  border: 1px solid var(--darkPurple2);\n\n  h3 {\n    display: inline;\n    /* color: var(--brandLightPurple); */\n  }\n\n  :hover {\n    /* box-shadow: 0px 2px 8px -2px var(--brandLightPurple); */\n    box-shadow: 0px 8px 16px -6px var(--darkPurple2);\n  }\n`;\n\nexport default Card;\n","import * as React from \"react\"\nimport { useUser } from \"../stores/userStore\"\n\nimport * as apiV0 from \"../services/api/v0\"\n\nexport const useProjectsForUser = () => {\n  const [projects, setProjects] = React.useState([])\n  const user = useUser()\n\n  React.useEffect(() => {\n    apiV0.getProjectsForEmployee(user.EmployeeID).then((projects) => {\n      setProjects(projects)\n    })\n  }, [user.EmployeeID])\n\n  return projects\n}\n","import * as React from \"react\"\r\nimport { Box } from \"../../components/Box\"\r\nimport styled from \"styled-components\"\r\nimport { useGlobalStore } from \"../../global.store\"\r\nimport * as ProjectsStore from \"../../projects.store\"\r\n\r\nimport { TextInput } from \"../../components/TextInput\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { Logo } from \"../../components/Logo\"\r\nimport { Button } from \"../../components/Button\"\r\nimport { Page } from \"../../components/Page\"\r\nimport { Search } from \"react-feather\"\r\nimport { useLocation, Route, Switch } from \"wouter\"\r\nimport { useBreadcrumb } from \"../../hooks/useBreadcrumbs\"\r\nimport { Parcels } from \"../Parcels\"\r\n\r\nimport { useUser } from \"../../stores/userStore\"\r\n\r\nimport {\r\n  Home as HomeIcon,\r\n  Users as UsersIcon,\r\n  TrendingUp,\r\n  DollarSign,\r\n  File,\r\n} from \"react-feather\"\r\n\r\nimport Card from \"../../components/Card\"\r\nimport { useProjectsForUser } from \"../../hooks/useProjectsForUser\"\r\n\r\nexport const Home = (props) => {\r\n  const user = useUser()\r\n  const projects = useProjectsForUser()\r\n\r\n  return (\r\n    <Page title=\"Dashboard\">\r\n      <div>\r\n        <h2>Welcome back,</h2>\r\n        <h1>{user.FullName}</h1>\r\n      </div>\r\n      <Spacer size=\"32px\" />\r\n      <Box paddingX=\"24px\" paddingY=\"16px\" flexDirection=\"column\">\r\n        <h2>Apps</h2>\r\n\r\n        <Box padding=\"32px\" flexWrap=\"wrap\">\r\n          <PortalCard\r\n            href=\"/people\"\r\n            icon={UsersIcon}\r\n            title=\"People\"\r\n            description=\"Manage employees.\"\r\n          />\r\n          <Spacer size=\"24px\" />\r\n          <PortalCard\r\n            href=\"/titlePlant\"\r\n            icon={File}\r\n            title=\"Title Plant\"\r\n            description=\"Search titles.\"\r\n          />\r\n          <Spacer size=\"24px\" />\r\n          <PortalCard\r\n            href=\"/marketing\"\r\n            icon={TrendingUp}\r\n            title=\"Marketing\"\r\n            description=\"Coming soon.\"\r\n          />\r\n          <Spacer size=\"24px\" />\r\n          <PortalCard\r\n            href=\"/accounting\"\r\n            icon={DollarSign}\r\n            title=\"Accounting\"\r\n            description=\"Coming soon.\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box paddingX=\"24px\" paddingY=\"16px\" flexDirection=\"column\">\r\n        <Box>\r\n          <h2>Projects</h2>\r\n        </Box>\r\n        <Spacer size=\"16px\" />\r\n        <Box padding=\"16px\" flexWrap=\"wrap\">\r\n          {projects.map((project) => (\r\n            <ProjectCard {...project} key={project.ProjectID} />\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst ProjectCard = (props) => {\r\n  const [location, setLocation] = useLocation()\r\n  const globalStore = useGlobalStore()\r\n\r\n  return (\r\n    <Card\r\n      onClick={() => {\r\n        globalStore.setCurrentProjectID(props.ProjectID)\r\n        setLocation(`/project/${props.ProjectID}/parcels`)\r\n      }}\r\n      key={props.ProjectID}\r\n      style={{ minWidth: \"30%\", margin: \"0 24px 24px 0\" }}\r\n    >\r\n      <Box flexDirection=\"column\">\r\n        <h3>{props.ProjectName}</h3>\r\n        {/* <small>O 150 / X 150 / T 500</small> */}\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledPortalCard = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-radius: 6px;\r\n  height: 100px;\r\n  width: 30%;\r\n  cursor: pointer;\r\n  padding: 16px 32px;\r\n  background: #fff;\r\n  background-position: 20% 7%;\r\n  box-shadow: 0px 2px 12px -4px var(--darkPurple2);\r\n  transition: all 0.25s;\r\n  border: 1px solid var(--darkPurple2);\r\n  margin-bottom: 24px;\r\n\r\n  h3 {\r\n    display: inline;\r\n    /* color: var(--brandLightPurple); */\r\n  }\r\n\r\n  :hover {\r\n    /* box-shadow: 0px 2px 8px -2px var(--brandLightPurple); */\r\n    box-shadow: 0px 8px 16px -6px var(--darkPurple2);\r\n  }\r\n`\r\n\r\nconst PortalCard = (props) => {\r\n  const [, setLocation] = useLocation()\r\n\r\n  return (\r\n    <StyledPortalCard onClick={() => setLocation(props.href)}>\r\n      <props.icon size={32} />\r\n      <Spacer size=\"24px\" />\r\n      <div>\r\n        <h3>{props.title}</h3>\r\n        <p>{props.description}</p>\r\n      </div>\r\n    </StyledPortalCard>\r\n  )\r\n}\r\n","import * as React from \"react\";\r\nimport { useGlobalStore } from \"../global.store\";\r\nimport { useProjects } from \"../projects.store\";\r\n\r\nexport const useCurrentProject = () => {\r\n  const globalStore = useGlobalStore();\r\n  const projectsStore = useProjects();\r\n  const project = projectsStore.getProjectWithID(globalStore.currentProjectID);\r\n  return project;\r\n};\r\n","import * as React from \"react\"\r\n\r\nimport * as apiV0 from \"../services/api/v0\"\r\n\r\nexport const useParcel = (parcelID) => {\r\n  const [parcel, setParcel] = React.useState({})\r\n\r\n  React.useEffect(() => {\r\n    apiV0.getParcel(parcelID).then((parcel) => {\r\n      setParcel(parcel)\r\n    })\r\n  }, [parcelID])\r\n\r\n  return parcel\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport * as apiV0 from \"../services/api/v0\"\r\n\r\nexport const useTitle = (titleID) => {\r\n  const [title, setTitle] = React.useState({})\r\n\r\n  React.useEffect(() => {\r\n    apiV0.getTitle(titleID).then((title) => {\r\n      setTitle(title)\r\n    })\r\n  }, [titleID])\r\n\r\n  return title\r\n}\r\n","import * as React from \"react\"\r\nimport { Grid, Cell } from \"styled-css-grid\"\r\nimport { UploadCloud, Link } from \"react-feather\"\r\nimport { SimpleDataCard } from \"../../components/SimpleDataCard\"\r\nimport { Page } from \"../../components/Page\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { ParcelDataCards } from \"./ParcelDataCards\"\r\nimport { Box } from \"../../components/Box\"\r\nimport truncate from \"truncate\"\r\n\r\nimport styled from \"styled-components\"\r\nimport theme from \"../../theme\"\r\nimport { SmallLabel } from \"../../components/SmallLabel\"\r\nimport { Breadcrumb } from \"@servicetitan/design-system\"\r\nimport { useBreadcrumb } from \"../../hooks/useBreadcrumbs\"\r\nimport { useRoute, useLocation, Route, Switch } from \"wouter\"\r\n\r\nimport { useCurrentProject } from \"../../hooks/useCurrentProject\"\r\nimport { Table } from \"../../components/Table\"\r\nimport { Button } from \"../../components/Button\"\r\n\r\nimport { useTitles } from \"../../hooks/useTitles\"\r\nimport { useParcel } from \"../../hooks/useParcel\"\r\nimport { TextInput } from \"../../components/TextInput\"\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\"\r\nimport { useTitle } from \"../../hooks/useTitle\"\r\n\r\nconst StyledDataText = styled.span`\r\n  margin-right: 64px;\r\n  margin-bottom: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: ${(props) => (props.longText ? \"100%\" : \"auto\")};\r\n  padding: ${(props) => (props.longText ? \"16px 0\" : \"0\")};\r\n  /* background: ${(props) =>\r\n    props.longText ? \"var(--grayscale0)\" : \"none\"}; */\r\n\r\n  span {\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n  }\r\n`\r\n\r\nconst DataText = (props) => {\r\n  return (\r\n    <StyledDataText {...props}>\r\n      <span>{props.label}</span>\r\n      <p>{props.value}</p>\r\n    </StyledDataText>\r\n  )\r\n}\r\n\r\nexport const ProjectParcelTitleView = (props) => {\r\n  const title = useTitle(props.params.titleID)\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs.Crumb\r\n        path={`/project/${props.params.projectID}/parcels/${props.params.parcelID}/title/${props.params.titleID}`}\r\n        text={`Title (${props.params.titleID})`}\r\n      />\r\n      <h1>Title</h1>\r\n      <Box\r\n        width=\"100%\"\r\n        padding=\"24px\"\r\n        flexWrap=\"wrap\"\r\n        // justifyContent=\"space-between\"\r\n      >\r\n        <DataText value={title.DocumentType || \"N/A\"} label=\"Document Type\" />\r\n        <DataText label=\"Document Type\" value={title.DocumentType || \"N/A\"} />\r\n        <DataText\r\n          label=\"Instrument Number\"\r\n          value={title.InstrumentNumber || \"N/A\"}\r\n        />\r\n        <DataText label=\"Book Volume\" value={title.BookVolume || \"N/A\"} />\r\n        <DataText label=\"Page\" value={title.Page || \"N/A\"} />\r\n        <DataText label=\"Effective Date\" value={title.EffectiveDate || \"N/A\"} />\r\n        <DataText label=\"Recorded Date\" value={title.RecordedDate || \"N/A\"} />\r\n        <DataText\r\n          label=\"Certification Date\"\r\n          value={title.CertificationDate || \"N/A\"}\r\n        />\r\n        <DataText label=\"Acreage\" value={title.Acreage || \"N/A\"} />\r\n        <Spacer size=\"16px\" />\r\n        <DataText\r\n          longText\r\n          label=\"Conveyance\"\r\n          value={title.Conveyance || \"N/A\"}\r\n        />\r\n        <DataText longText label=\"Grantee\" value={title.Grantee || \"N/A\"} />\r\n        <DataText longText label=\"Grantor\" value={title.Grantor || \"N/A\"} />\r\n        <DataText longText label=\"Comments\" value={title.Comments || \"N/A\"} />\r\n      </Box>\r\n      <Box width=\"100%\" padding=\"24px\" justifyContent=\"flex-end\">\r\n        <Button>\r\n          <Link size=\"21px\" style={{ marginRight: 12 }} />\r\n          Link to GIS\r\n        </Button>\r\n        <Spacer size=\"24px\" />\r\n        <Button>\r\n          <UploadCloud size=\"21px\" style={{ marginRight: 12 }} />\r\n          Upload Document\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { Grid, Cell } from \"styled-css-grid\"\r\nimport { User } from \"react-feather\"\r\nimport { SimpleDataCard } from \"../../components/SimpleDataCard\"\r\nimport { Page } from \"../../components/Page\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { ParcelDataCards } from \"./ParcelDataCards\"\r\nimport { Box } from \"../../components/Box\"\r\nimport truncate from \"truncate\"\r\n\r\nimport styled from \"styled-components\"\r\nimport theme from \"../../theme\"\r\nimport { SmallLabel } from \"../../components/SmallLabel\"\r\nimport { Breadcrumb } from \"@servicetitan/design-system\"\r\nimport { useBreadcrumb } from \"../../hooks/useBreadcrumbs\"\r\nimport { useRoute, useLocation, Route, Switch } from \"wouter\"\r\n\r\nimport { Plus } from \"react-feather\"\r\nimport Popup from \"reactjs-popup\"\r\nimport { useCurrentProject } from \"../../hooks/useCurrentProject\"\r\nimport { Table } from \"../../components/Table\"\r\nimport { Button } from \"../../components/Button\"\r\n\r\nimport { useTitles } from \"../../hooks/useTitles\"\r\nimport { useParcel } from \"../../hooks/useParcel\"\r\n\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\"\r\nimport { ProjectParcelTitleView } from \"./ProjectParcelTitleView\"\r\nimport { useGlobalStore } from \"../../global.store\"\r\nimport { TextInput } from \"../../components/TextInput\"\r\nimport { useProject } from \"../../hooks/useProject\"\r\n// import { Grid, Cell } from \"styled-css-grid\";\r\n\r\nconst TitleTable = (props) => {\r\n  const globalStore = useGlobalStore()\r\n  const [location, setLocation] = useLocation()\r\n\r\n  const columns = React.useRef([\r\n    {\r\n      Header: \"ID\",\r\n      accessor: \"TitleID\",\r\n      width: 80,\r\n      onClick: (cell) => {\r\n        globalStore.setCurrentTitleID(cell.value)\r\n      },\r\n    },\r\n    {\r\n      Header: \"Status\",\r\n      accessor: \"status\",\r\n      width: 120,\r\n      // onClick: cell => {\r\n      //   setLocation(`${location}/${cell.value}`);\r\n      // }\r\n    },\r\n    {\r\n      Header: \"Grantor\",\r\n      accessor: \"Grantor\",\r\n      width: 230,\r\n      Cell: ({ cell: { value } }) => truncate(value, 23),\r\n    },\r\n    {\r\n      Header: \"Grantee\",\r\n      accessor: \"Grantee\",\r\n      width: 150,\r\n    },\r\n    {\r\n      Header: \"Recorded Date\",\r\n      accessor: \"RecordedDate\",\r\n      width: 200,\r\n    },\r\n    {\r\n      Header: \"Effective Date\",\r\n      accessor: \"EffectiveDate\",\r\n      width: 200,\r\n    },\r\n    {\r\n      Header: \"Document Type\",\r\n      accessor: \"DocumentType\",\r\n      width: 200,\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <Table\r\n      height={props.data.length * 45}\r\n      title=\"Titles\"\r\n      columns={columns.current}\r\n      data={props.data}\r\n      renderTopRow={(props, tableState) => (\r\n        <Box inline width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n          <Popup\r\n            trigger={\r\n              <Button small>\r\n                <Plus size=\"18px\" style={{ marginRight: 6 }} />\r\n                Add Title\r\n              </Button>\r\n            }\r\n            modal\r\n            closeOnDocumentClick\r\n          >\r\n            {(close) => <AddTitleModal close={close} />}\r\n          </Popup>\r\n        </Box>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nconst StyledDataText = styled.span`\r\n  margin-right: 64px;\r\n  margin-bottom: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: ${(props) => (props.longText ? \"100%\" : \"auto\")};\r\n  padding: ${(props) => (props.longText ? \"16px 0\" : \"0\")};\r\n  /* background: ${(props) =>\r\n    props.longText ? \"var(--grayscale0)\" : \"none\"}; */\r\n\r\n  span {\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n  }\r\n`\r\n\r\nconst DataText = (props) => {\r\n  return (\r\n    <StyledDataText {...props}>\r\n      <span>{props.label}</span>\r\n      <p>{props.value}</p>\r\n    </StyledDataText>\r\n  )\r\n}\r\n\r\nconst MutedText = styled.span`\r\n  /* opacity: 0.5; */\r\n  color: var(--grayscale7);\r\n  font-weight: 400;\r\n`\r\n\r\nexport const ProjectParcelView = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs.Crumb\r\n        path={`/project/${props.params.projectID}/parcels/${props.params.parcelID}`}\r\n        text={`Parcel`}\r\n      />\r\n      <Switch>\r\n        <Route\r\n          path=\"/project/:projectID/parcels/:parcelID\"\r\n          component={ParcelView}\r\n        />\r\n        <Route\r\n          path=\"/project/:projectID/parcels/:parcelID/title/:titleID\"\r\n          component={ProjectParcelTitleView}\r\n        />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ParcelView = (props) => {\r\n  const titles = useTitles()\r\n  const [, route] = useRoute(\"/project/:projectID/parcels/:parcelID\")\r\n  const parcel = useParcel(Number(props.params.parcelID))\r\n\r\n  return (\r\n    <>\r\n      <h1>\r\n        Parcel <MutedText>ID: {props.params.parcelID}</MutedText>\r\n      </h1>\r\n      <Spacer size=\"32px\" />\r\n      {parcel.ParcelID && <ParcelData parcel={parcel} />}\r\n      <TitleTable data={titles} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst ParcelData = ({ parcel }) => {\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      padding=\"24px\"\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-between\"\r\n    >\r\n      <DataText label=\"State\" value={parcel.StateCode || \"N/A\"} />\r\n      <DataText label=\"County\" value={parcel.County || \"N/A\"} />\r\n      <DataText label=\"Acres\" value={parcel.Acres || \"N/A\"} />\r\n      <DataText label=\"Parcel ID\" value={parcel.ParcelID || \"N/A\"} />\r\n      <DataText label=\"APN\" value={parcel.APN || \"N/A\"} />\r\n      <DataText label=\"Parcel Number\" value={parcel.ParcelNumber || \"N/A\"} />\r\n      <DataText label=\"Township Name\" value={parcel.TownshipName || \"N/A\"} />\r\n      <DataText label=\"Township\" value={parcel.Township || \"N/A\"} />\r\n      <DataText label=\"Range\" value={parcel.Range || \"N/A\"} />\r\n      <DataText label=\"Meridian\" value={parcel.Meridian || \"N/A\"} />\r\n      <DataText label=\"Address\" value={parcel.Address || \"N/A\"} />\r\n      <DataText label=\"City\" value={parcel.City || \"N/A\"} />\r\n      <DataText label=\"State\" value={parcel.State || \"N/A\"} />\r\n      <DataText label=\"Zip\" value={parcel.Zip || \"N/A\"} />\r\n      <Spacer size=\"16px\" />\r\n      <DataText label=\"Assigned To\" value={parcel.AssignedTo || \"N/A\"} />\r\n      <DataText\r\n        style={{ width: \"100%\" }}\r\n        label=\"Legal Description\"\r\n        value={parcel.LegalDescription || \"N/A\"}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst STATE_LABEL_MAP = {\r\n  TitleID: { label: \"Title ID\", width: 1 },\r\n  EmployeeID: { label: \"Employee ID\", width: 1 },\r\n  RecordedDate: { label: \"Recorded Date\", width: 1 },\r\n  CertificationDate: { label: \"Certification Date\", width: 1 },\r\n  EffectiveDate: { label: \"Effective Date\", width: 1 },\r\n  DocumentType: { label: \"Document Type\", width: 1 },\r\n  DocumentName: { label: \"Document Name\", width: 1 },\r\n  BookVolume: { label: \"Book Volume\", width: 1 },\r\n  Page: { label: \"Page\", width: 1 },\r\n  Acreage: { label: \"Acreage\", width: 1 },\r\n  Grantor: { label: \"Grantor\", width: 2 },\r\n  Grantee: { label: \"Grantee\", width: 2 },\r\n  Conveyance: { label: \"Conveyance\", width: 2 },\r\n  CreatedDate: { label: \"Created Date\", width: 2 },\r\n  Mapped: { label: \"Mapped\", width: 2 },\r\n  CreatedBy: { label: \"Created By\", width: 2 },\r\n}\r\n\r\nconst StyledModal = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  min-width: 900px;\r\n  height: 100%;\r\n  min-height: 700px;\r\n  max-height: 800px;\r\n  border-radius: 6px;\r\n  padding: 48px;\r\n  background: var(--grayscale0);\r\n  overflow-y: scroll;\r\n`\r\n\r\nconst StyledForm = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 24px;\r\n`\r\n\r\nconst AddTitleModal = (props) => {\r\n  const [state, setState] = React.useState({\r\n    TitleID: \"\",\r\n    EmployeeID: \"\",\r\n    RecordedDate: \"\",\r\n    CertificationDate: \"\",\r\n    DocumentType: \"\",\r\n    DocumentName: \"\",\r\n    EffectiveDate: \"\",\r\n    BookVolume: \"\",\r\n    Page: \"\",\r\n    Acreage: \"\",\r\n    Grantor: \"\",\r\n    Grantee: \"\",\r\n    Conveyance: \"\",\r\n    CreatedDate: \"\",\r\n    CreatedBy: \"\",\r\n    Mapped: \"\",\r\n  })\r\n\r\n  const onChange = (key) => (event) => {\r\n    const { value } = event.target\r\n    setState((state) => ({\r\n      ...state,\r\n      [key]: value,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <StyledModal>\r\n      <h2>Add Title</h2>\r\n      <StyledForm>\r\n        <Grid columns={2} gap=\"24px\" style={{ width: \"100%\" }}>\r\n          {Object.entries(state).map(([key, value]) => (\r\n            <Cell width={STATE_LABEL_MAP[key].width}>\r\n              <TextInput\r\n                width=\"100%\"\r\n                label={STATE_LABEL_MAP[key].label}\r\n                value={value}\r\n                onChange={onChange(key)}\r\n              />\r\n            </Cell>\r\n          ))}\r\n        </Grid>\r\n      </StyledForm>\r\n      <StyledActionsRow>\r\n        <Button.Ghost onClick={props.close}>Cancel</Button.Ghost>\r\n        <Spacer size=\"24px\" />\r\n        <Button onClick={props.close}>Submit</Button>\r\n      </StyledActionsRow>\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nconst StyledActionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n`\r\n","import * as React from \"react\";\r\n\r\nimport { titles } from \"../sampleData.json\";\r\n\r\nexport const useTitles = () => {\r\n  return titles;\r\n};\r\n","import * as React from \"react\"\n\nimport * as apiV0 from \"../services/api/v0\"\nimport { useUser } from \"../stores/userStore\"\nimport { useGlobalStore } from \"../global.store\"\n\nexport const useParcelsForProject = () => {\n  const [parcels, setParcels] = React.useState([])\n  const { currentProjectID } = useGlobalStore()\n  const user = useUser()\n\n  React.useEffect(() => {\n    apiV0\n      .getParcelsForProject(user.EmployeeID, currentProjectID)\n      .then((data) => {\n        setParcels(data)\n      })\n  }, [currentProjectID])\n\n  return parcels\n}\n","import * as React from \"react\"\r\nimport { Page } from \"../../components/Page\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { ParcelDataCards } from \"./ParcelDataCards\"\r\nimport { useRoute, useLocation, Route, Switch, Link } from \"wouter\"\r\nimport * as ProjectsStore from \"../../projects.store\"\r\nimport { useGlobalStore } from \"../../global.store\"\r\nimport { ParcelsTable } from \"./ParcelsTable\"\r\nimport sampleData from \"../../sampleData.json\"\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\"\r\n\r\nimport { ProjectParcelView } from \"./ProjectParcelView\"\r\nimport { ProjectParcelTitleView } from \"./ProjectParcelTitleView\"\r\nimport { useCurrentProject } from \"../../hooks/useCurrentProject\"\r\nimport { Box } from \"../../components/Box\"\r\nimport { useParcelsForProject } from \"../../hooks/useParcelsForProject\"\r\nimport { useProject } from \"../../hooks/useProject\"\r\n\r\nconst projectParcels = sampleData.parcels\r\n\r\nconst Navigation = (props) => {\r\n  const currentProject = useCurrentProject()\r\n\r\n  return (\r\n    <Page.Navigation>\r\n      <Page.NavigationItem\r\n        href={`/project/${currentProject.ProjectID}/parcels`}\r\n      >\r\n        Parcels\r\n      </Page.NavigationItem>\r\n      <Page.NavigationItem\r\n        href={`/project/${currentProject.ProjectID}/reports`}\r\n      >\r\n        Reports\r\n      </Page.NavigationItem>\r\n      <Page.NavigationItem href={`/project/${currentProject.ProjectID}/stuff`}>\r\n        Stuff\r\n      </Page.NavigationItem>\r\n    </Page.Navigation>\r\n  )\r\n}\r\n\r\nconst PROJECT_NAVIGATION = [\r\n  [\"Parcels\", \"/parcels\"],\r\n  // [\"Admin\", [[\"Settings\", \"/admin/settings\"], [\"Security\", \"/admin/security\"]]]\r\n]\r\n\r\nexport const ProjectParcelsView = (props) => {\r\n  const project = useCurrentProject()\r\n\r\n  return (\r\n    <Page\r\n      title={`${project.ProjectName}`}\r\n      baseRoute={`/project/${project.ProjectID}`}\r\n      navigation={PROJECT_NAVIGATION}\r\n    >\r\n      <Breadcrumbs.Crumb\r\n        path={`/project/${project.ProjectID}/parcels`}\r\n        text=\"Parcels\"\r\n      />\r\n\r\n      <Switch>\r\n        <Route path=\"/project/:projectID/parcels\" component={ParcelsView} />\r\n\r\n        <Route\r\n          path=\"/project/:projectID/parcels/:parcelID\"\r\n          component={ProjectParcelView}\r\n        />\r\n        <Route\r\n          path=\"/project/:projectID/parcels/:rest*\"\r\n          component={ProjectParcelView}\r\n        />\r\n      </Switch>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst ParcelsView = (props) => {\r\n  const parcels = useParcelsForProject()\r\n\r\n  return (\r\n    <>\r\n      <Box justifyContent=\"space-between\">\r\n        <h1>Parcels</h1>\r\n        <ParcelDataCards parcels={parcels} />\r\n      </Box>\r\n      <Spacer size=\"32px\" />\r\n      <ParcelsTable data={parcels} />\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\";\r\nimport { Page } from \"../../components/Page\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\nimport { ParcelDataCards } from \"./ParcelDataCards\";\r\nimport { useRoute, useLocation, Route, Switch, Link } from \"wouter\";\r\nimport * as ProjectsStore from \"../../projects.store\";\r\nimport { useGlobalStore } from \"../../global.store\";\r\nimport { ParcelsTable } from \"./ParcelsTable\";\r\nimport sampleData from \"../../sampleData.json\";\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\";\r\n\r\nimport { ProjectParcelView } from \"./ProjectParcelView\";\r\nimport { ProjectParcelTitleView } from \"./ProjectParcelTitleView\";\r\nimport { useCurrentProject } from \"../../hooks/useCurrentProject\";\r\n\r\nconst projectParcels = sampleData.parcels;\r\n\r\nconst Navigation = props => {\r\n  const currentProject = useCurrentProject();\r\n\r\n  return (\r\n    <Page.Navigation>\r\n      <Page.NavigationItem\r\n        href={`/project/${currentProject.ProjectID}/parcels`}\r\n      >\r\n        Parcels\r\n      </Page.NavigationItem>\r\n      <Page.NavigationItem\r\n        href={`/project/${currentProject.ProjectID}/reports`}\r\n      >\r\n        Reports\r\n      </Page.NavigationItem>\r\n      <Page.NavigationItem href={`/project/${currentProject.ProjectID}/stuff`}>\r\n        Stuff\r\n      </Page.NavigationItem>\r\n    </Page.Navigation>\r\n  );\r\n};\r\n\r\nexport const ProjectReportsView = props => {\r\n  const project = useCurrentProject();\r\n\r\n  return (\r\n    <Page title={`${project.ProjectName}`} navigation={<Navigation />}>\r\n      <Breadcrumbs.Crumb\r\n        path={`/project/${project.ProjectID}/reports`}\r\n        text=\"Reports\"\r\n      />\r\n\r\n      <Switch>\r\n        <Route path=\"/project/:projectID/reports\" component={ReportsView} />\r\n      </Switch>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst ReportsView = props => {\r\n  return (\r\n    <>\r\n      <h1>Reports</h1>\r\n      <Spacer size=\"16px\" />\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Box } from \"../../components/Box\";\r\n\r\nimport { useGlobalStore } from \"../../global.store\";\r\nimport * as ProjectsStore from \"../../projects.store\";\r\n\r\nimport { TextInput } from \"../../components/TextInput\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\nimport { Logo } from \"../../components/Logo\";\r\nimport { Button } from \"../../components/Button\";\r\nimport { Page } from \"../../components/Page\";\r\nimport { Search } from \"react-feather\";\r\nimport { useLocation, Route, Switch } from \"wouter\";\r\nimport { useBreadcrumb } from \"../../hooks/useBreadcrumbs\";\r\nimport { Crumb } from \"../../components/Breadcrumbs\";\r\nimport { useCurrentProject } from \"../../hooks/useCurrentProject\";\r\n\r\nimport { ProjectParcelsView } from \"./ProjectParcelsView\";\r\nimport { ProjectParcelView } from \"./ProjectParcelView\";\r\nimport { ProjectReportsView } from \"./ProjectRecordsView\";\r\nimport { ProjectParcelTitleView } from \"./ProjectParcelTitleView\";\r\n\r\nexport const ProjectView = props => {\r\n  const [location, setLocation] = useLocation();\r\n  const projectsStore = ProjectsStore.useProjects();\r\n  const globalStore = useGlobalStore();\r\n  const project = useCurrentProject();\r\n\r\n  return (\r\n    <>\r\n      <Crumb\r\n        path={`/project/${project.ProjectID}/parcels`}\r\n        text={`Project (${project.ProjectName})`}\r\n      />\r\n      <Switch>\r\n        <Route\r\n          path=\"/project/:projectID/parcels/:rest*\"\r\n          component={ProjectParcelsView}\r\n        />\r\n        <Route\r\n          path=\"/project/:projectID/reports\"\r\n          component={ProjectReportsView}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Table } from \"../../components/Table\";\r\nimport { useLocation } from \"wouter\";\r\nimport { Box } from \"../../components/Box\";\r\nimport { Button } from \"../../components/Button\";\r\nimport { Plus } from \"react-feather\";\r\nimport { useGlobalStore } from \"../../global.store\";\r\nimport Popup from \"reactjs-popup\";\r\nimport styled from \"styled-components\";\r\nimport { TextInput } from \"../../components/TextInput\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\n\r\nexport const PeopleTable = props => {\r\n  const [location, setLocation] = useLocation();\r\n  const globalStore = useGlobalStore();\r\n  const [isModalShown, setIsModalShown] = React.useState(false);\r\n\r\n  const columns = React.useRef([\r\n    {\r\n      Header: \"ID\",\r\n      accessor: \"EmployeeID\",\r\n      width: 80,\r\n      onClick: cell => {\r\n        setLocation(`/people/${cell.value}`);\r\n      }\r\n    },\r\n    {\r\n      Header: \"First Name\",\r\n      accessor: \"FirstName\",\r\n      width: 150\r\n    },\r\n    {\r\n      Header: \"Last Name\",\r\n      accessor: \"LastName\",\r\n      width: 250\r\n    },\r\n    {\r\n      Header: \"Email Address\",\r\n      accessor: \"EmailAddress\",\r\n      width: 300\r\n    },\r\n    {\r\n      Header: \"Location ID\",\r\n      accessor: \"LocationID\",\r\n      width: 120\r\n    },\r\n    {\r\n      Header: \"Experience\",\r\n      accessor: \"YearsExperience\",\r\n      width: 120\r\n    },\r\n    {\r\n      Header: \"Pay Rate\",\r\n      accessor: \"PayRate\",\r\n      width: 100\r\n    },\r\n    {\r\n      Header: \"Status\",\r\n      accessor: \"StatusID\",\r\n      width: 100\r\n    },\r\n    {\r\n      Header: \"Created Date\",\r\n      accessor: \"CreateDate\",\r\n      width: 130,\r\n      Cell: ({ cell: { value } }) => value.substring(0, 10)\r\n    }\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        title=\"People\"\r\n        columns={columns.current}\r\n        data={props.data}\r\n        renderTopRow={(props, tableState) => (\r\n          <Box\r\n            inline\r\n            width=\"100%\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            {/* <Popup\r\n              trigger={\r\n                <Button small onClick={() => setIsModalShown(true)}>\r\n                  <Plus size=\"18px\" style={{ marginRight: 6 }} />\r\n                  Add Parcel\r\n                </Button>\r\n              }\r\n              modal\r\n              closeOnDocumentClick\r\n            >\r\n              {close => <AddPersonModal close={close} />}\r\n            </Popup> */}\r\n          </Box>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Page } from \"../../components/Page\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\nimport { Route, Switch } from \"wouter\";\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\";\r\nimport { PeopleTable } from \"./PeopleTable\";\r\nimport { Link } from \"../../components/Link\";\r\nimport { people } from \"../../sampleData.json\";\r\n\r\nconst PEOPLE_NAVIGATION = [\r\n  [\"People\", \"/people\"]\r\n  // [\"Admin\", [[\"Settings\", \"/admin/settings\"], [\"Security\", \"/admin/security\"]]]\r\n];\r\n\r\nexport const People = props => {\r\n  return (\r\n    <Page title=\"People\" baseRoute=\"/people\" navigation={PEOPLE_NAVIGATION}>\r\n      <Breadcrumbs.Crumb path={`/people`} text=\"People\" />\r\n\r\n      <Switch>\r\n        <Route path=\"/people\" component={PeopleView} />\r\n      </Switch>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst PeopleView = props => {\r\n  return (\r\n    <>\r\n      <h1>People</h1>\r\n      <Spacer size=\"16px\" />\r\n      <PeopleTable data={people} />\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Page } from \"../../components/Page\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\nimport { useRoute, useLocation, Route, Switch, Link } from \"wouter\";\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\";\r\n\r\nconst MARKETING_NAVIGATION = [[\"Marketing\", \"/marketing\"]];\r\n\r\nexport const Marketing = props => {\r\n  return (\r\n    <Page\r\n      title=\"Marketing\"\r\n      baseRoute=\"/marketing\"\r\n      navigation={MARKETING_NAVIGATION}\r\n    >\r\n      <Breadcrumbs.Crumb path={`/marketing`} text=\"Marketing\" />\r\n\r\n      <Switch>\r\n        <Route path=\"/marketing\" component={MarketinvView} />\r\n      </Switch>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst MarketinvView = props => {\r\n  return (\r\n    <>\r\n      <h1>Marketing</h1>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Page } from \"../../components/Page\";\r\nimport { Spacer } from \"../../components/Spacer\";\r\nimport { useRoute, useLocation, Route, Switch, Link } from \"wouter\";\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\";\r\n\r\nconst ACCOUNTING_NAVIGATION = [[\"Accounting\", \"/accounting\"]];\r\n\r\nexport const Accounting = props => {\r\n  return (\r\n    <Page\r\n      title=\"Accounting\"\r\n      baseRoute=\"/accounting\"\r\n      navigation={ACCOUNTING_NAVIGATION}\r\n    >\r\n      <Breadcrumbs.Crumb path={`/accounting`} text=\"Accounting\" />\r\n\r\n      <Switch>\r\n        <Route path=\"/accounting\" component={AccountingView} />\r\n      </Switch>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst AccountingView = props => {\r\n  return (\r\n    <>\r\n      <h1>Accounting</h1>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\"\nimport { Table } from \"../../components/Table\"\nimport { useLocation } from \"wouter\"\nimport { Box } from \"../../components/Box\"\nimport { Button } from \"../../components/Button\"\nimport { Plus } from \"react-feather\"\nimport { useGlobalStore } from \"../../global.store\"\nimport Popup from \"reactjs-popup\"\nimport styled from \"styled-components\"\nimport { TextInput } from \"../../components/TextInput\"\nimport { Spacer } from \"../../components/Spacer\"\nimport { Grid, Cell } from \"styled-css-grid\"\nimport truncate from \"truncate\"\n\nexport const TitleTable = (props) => {\n  const globalStore = useGlobalStore()\n  const [location, setLocation] = useLocation()\n\n  const columns = React.useRef([\n    {\n      Header: \"ID\",\n      accessor: \"TitleID\",\n      width: 80,\n      onClick: (cell) => {\n        globalStore.setCurrentTitleID(cell.value)\n      },\n    },\n    {\n      Header: \"Status\",\n      accessor: \"status\",\n      width: 120,\n    },\n    {\n      Header: \"Grantor\",\n      accessor: \"Grantor\",\n      width: 230,\n      Cell: ({ cell: { value } }) => truncate(value, 23),\n    },\n    {\n      Header: \"Grantee\",\n      accessor: \"Grantee\",\n      width: 150,\n    },\n    {\n      Header: \"Recorded Date\",\n      accessor: \"RecordedDate\",\n      width: 200,\n    },\n    {\n      Header: \"Effective Date\",\n      accessor: \"EffectiveDate\",\n      width: 200,\n    },\n    {\n      Header: \"Document Type\",\n      accessor: \"DocumentType\",\n      width: 200,\n    },\n  ])\n\n  return (\n    <Table\n      height={props.data.length * 45}\n      title=\"Titles\"\n      columns={columns.current}\n      data={props.data}\n      renderTopRow={(props, tableState) => (\n        <Box inline width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n          <Popup\n            trigger={\n              <Button small>\n                <Plus size=\"18px\" style={{ marginRight: 6 }} />\n                Add Title\n              </Button>\n            }\n            modal\n            closeOnDocumentClick\n          >\n            {(close) => <AddTitleModal close={close} />}\n          </Popup>\n        </Box>\n      )}\n    />\n  )\n}\n\nconst STATE_LABEL_MAP = {\n  TitleID: { label: \"Title ID\", width: 1 },\n  EmployeeID: { label: \"Employee ID\", width: 1 },\n  RecordedDate: { label: \"Recorded Date\", width: 1 },\n  CertificationDate: { label: \"Certification Date\", width: 1 },\n  EffectiveDate: { label: \"Effective Date\", width: 1 },\n  DocumentType: { label: \"Document Type\", width: 1 },\n  DocumentName: { label: \"Document Name\", width: 1 },\n  BookVolume: { label: \"Book Volume\", width: 1 },\n  Page: { label: \"Page\", width: 1 },\n  Acreage: { label: \"Acreage\", width: 1 },\n  Grantor: { label: \"Grantor\", width: 2 },\n  Grantee: { label: \"Grantee\", width: 2 },\n  Conveyance: { label: \"Conveyance\", width: 2 },\n  CreatedDate: { label: \"Created Date\", width: 2 },\n  Mapped: { label: \"Mapped\", width: 2 },\n  CreatedBy: { label: \"Created By\", width: 2 },\n}\n\nconst StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 1100px;\n  min-width: 900px;\n  height: 100%;\n  min-height: 700px;\n  max-height: 800px;\n  border-radius: 6px;\n  padding: 48px;\n  background: var(--grayscale0);\n  overflow-y: scroll;\n`\n\nconst StyledForm = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  padding: 24px;\n`\n\nconst AddTitleModal = (props) => {\n  const [state, setState] = React.useState({\n    TitleID: \"\",\n    EmployeeID: \"\",\n    RecordedDate: \"\",\n    CertificationDate: \"\",\n    DocumentType: \"\",\n    DocumentName: \"\",\n    EffectiveDate: \"\",\n    BookVolume: \"\",\n    Page: \"\",\n    Acreage: \"\",\n    Grantor: \"\",\n    Grantee: \"\",\n    Conveyance: \"\",\n    CreatedDate: \"\",\n    CreatedBy: \"\",\n    Mapped: \"\",\n  })\n\n  const onChange = (key) => (event) => {\n    const { value } = event.target\n    setState((state) => ({\n      ...state,\n      [key]: value,\n    }))\n  }\n\n  return (\n    <StyledModal>\n      <h2>Add Title</h2>\n      <StyledForm>\n        <Grid columns={2} gap=\"24px\" style={{ width: \"100%\" }}>\n          {Object.entries(state).map(([key, value]) => (\n            <Cell width={STATE_LABEL_MAP[key].width}>\n              <TextInput\n                width=\"100%\"\n                label={STATE_LABEL_MAP[key].label}\n                value={value}\n                onChange={onChange(key)}\n              />\n            </Cell>\n          ))}\n        </Grid>\n      </StyledForm>\n      <StyledActionsRow>\n        <Button.Ghost onClick={props.close}>Cancel</Button.Ghost>\n        <Spacer size=\"24px\" />\n        <Button onClick={props.close}>Submit</Button>\n      </StyledActionsRow>\n    </StyledModal>\n  )\n}\n\nconst StyledActionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n","import * as React from \"react\"\n// import { useUser } from \"../stores/userStore\"\n\nimport * as apiV0 from \"../services/api/v0\"\n\nexport const useStatesWithParcels = () => {\n  const [states, setStates] = React.useState([])\n\n  React.useEffect(() => {\n    apiV0.getStatesWithParcels().then((states) => {\n      setStates(states)\n    })\n  }, [])\n\n  return states\n}\n","import * as React from \"react\"\n\nimport * as apiV0 from \"../services/api/v0\"\n\nexport const useStateCountiesWithParcels = () => {\n  const [counties, setCounties] = React.useState([])\n\n  React.useEffect(() => {\n    apiV0.getStateCountiesWithParcels().then((counties) => {\n      setCounties(counties)\n    })\n  }, [])\n\n  return counties\n}\n","import * as React from \"react\"\r\nimport { Page } from \"../../components/Page\"\r\nimport { Spacer } from \"../../components/Spacer\"\r\nimport { useRoute, useLocation, Route, Switch, Link } from \"wouter\"\r\nimport * as Breadcrumbs from \"../../components/Breadcrumbs\"\r\nimport { TitleTable } from \"./TitleTable\"\r\nimport { Box } from \"../../components/Box\"\r\nimport { TextInput } from \"../../components/TextInput\"\r\nimport { useStatesWithParcels } from \"../../hooks/useStatesWithParcels\"\r\nimport { useStateCountiesWithParcels } from \"../../hooks/useStateCountiesWithParcels\"\r\n\r\nconst NAVIGATION = [[\"Title Plant\", \"/accounting\"]]\r\n\r\nexport const TitlePlant = (props) => {\r\n  return (\r\n    <Page title=\"Title Plant\" baseRoute=\"/titlePlant\" navigation={NAVIGATION}>\r\n      <Breadcrumbs.Crumb path={`/titlePlant`} text=\"Title Plant\" />\r\n\r\n      <Switch>\r\n        <Route path=\"/titlePlant\" component={TitlePlantView} />\r\n      </Switch>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst TitlePlantView = (props) => {\r\n  const [stateValue, setStateValue] = React.useState(\"\")\r\n  const [countyValue, setCountyValue] = React.useState(\"\")\r\n  const [selectedState, setSelectedState] = React.useState()\r\n  const [selectedCounty, setSelectedCounty] = React.useState()\r\n  // const [titles, setTitles] =\r\n  return (\r\n    <>\r\n      <h1>Title Plant</h1>\r\n      <Spacer size=\"16px\" />\r\n      <Box>\r\n        <StateSelectInput\r\n          value={stateValue}\r\n          label=\"State\"\r\n          placeholder=\"Choose a State\"\r\n          onChange={(event) => setStateValue(event.target.value)}\r\n          isSelectable\r\n          onSelectiob={setSelectedState}\r\n        />\r\n        {selectedState && (\r\n          <CountySelectInput\r\n            label=\"County\"\r\n            state={selectedState}\r\n            value={countyValue}\r\n            placeholder=\"Choose a County\"\r\n            onChange={(event) => setCountyValue(event.target.value)}\r\n            isSelectable\r\n            onSelectiob={setSelectedCounty}\r\n          />\r\n        )}\r\n      </Box>\r\n      {/* <TitleTable /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nconst StateSelectInput = (props) => {\r\n  const states = useStatesWithParcels()\r\n\r\n  return <TextInput {...props} selectOptions={states} />\r\n}\r\n\r\nconst CountySelectInput = (props) => {\r\n  const counties = useStateCountiesWithParcels(props.state.StateCode)\r\n\r\n  return <TextInput {...props} selectOptions={counties} />\r\n}\r\n","import * as React from \"react\"\r\nimport { Switch, Route, Redirect } from \"wouter\"\r\n\r\nimport { Home } from \"./pages/Home\"\r\nimport { ProjectView } from \"./pages/Parcels/ProjectView\"\r\nimport { People } from \"./pages/People\"\r\nimport { Marketing } from \"./pages/Marketing\"\r\nimport { Accounting } from \"./pages/Accounting\"\r\nimport { TitlePlant } from \"./pages/TitlePlant\"\r\nimport { LogIn } from \"./pages/LogIn\"\r\n\r\n// const getParcelsForProject = async () => {\r\n//   const response = await fetch(\"http://localhost:8090/api/v0/getParcelsForProject\")\r\n//   const json = await response.json()\r\n//   console.log({ json })\r\n// }\r\n\r\n// const getTitlesForParcel = async () => {\r\n//   const response = await fetch(\"http://localhost:8090/api/v0/getTitlesForParcel\")\r\n//   const json = await response.json()\r\n//   console.log({ json })\r\n// }\r\n\r\nexport const UnauthenticatedRouter = (props) => {\r\n  return <LogIn {...props} />\r\n}\r\n\r\nexport const AuthenticatedRouter = (props) => {\r\n  // React.useEffect(() => {\r\n  //   getParcels()\r\n  //   getTitles()\r\n  //   authenticateUser()\r\n  // }, [])\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={Home} />\r\n      <Route path=\"/project/:projectID/:rest*\" component={ProjectView} />\r\n      <Route path=\"/people/:rest*\" component={People} />\r\n      <Route path=\"/marketing/:rest*\" component={Marketing} />\r\n      <Route path=\"/accounting/:rest*\" component={Accounting} />\r\n      <Route path=\"/titlePlant/:rest*\" component={TitlePlant} />\r\n      <Route path=\"/:rest*\">404, not found!</Route>\r\n    </Switch>\r\n  )\r\n}\r\n","import \"./setup\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"@servicetitan/anvil-fonts/dist/css/anvil-fonts.css\"\nimport \"@servicetitan/design-system/dist/system.min.css\"\n\nimport \"./styles/variables.css\"\nimport \"./styles/fonts.css\"\nimport \"./styles/styles.css\"\n\nimport * as GlobalStore from \"./global.store\"\nimport * as ProjectsStore from \"./projects.store\"\n\nimport * as Breadcrumbs from \"./components/Breadcrumbs\"\n\nimport { Link, Route, useLocation, useRouter } from \"wouter\"\nimport { BreadcrumbsProvider } from \"./hooks/useBreadcrumbs\"\n\nimport { Box } from \"./components/Box\"\nimport { SceneHeader } from \"./SceneHeader\"\n// import { Parcels } from \"./pages/Parcels\";\nimport { LogIn } from \"./pages/LogIn\"\nimport { Home } from \"./pages/Home\"\n\nimport sampleData from \"./sampleData.json\"\nimport { AuthenticatedRouter, UnauthenticatedRouter } from \"./Router\"\nimport { UserProvider, useUser } from \"./stores/userStore\"\n\nconst StoreWrapper = (props) => {\n  return (\n    <UserProvider>\n      <GlobalStore.Provider>\n        <BreadcrumbsProvider>\n          <AuthWrapper />\n        </BreadcrumbsProvider>\n      </GlobalStore.Provider>\n    </UserProvider>\n  )\n}\n\nconst AuthWrapper = (props) => {\n  const user = useUser()\n\n  return user.isAuthenticated ? <App /> : <UnauthenticatedRouter />\n}\n\nconst App = (props) => {\n  const user = useUser()\n  const [ready, setReady] = React.useState(false)\n  const [location, setLocation] = useLocation()\n  const router = useRouter()\n\n  console.log({ user })\n\n  React.useLayoutEffect(() => {\n    setLocation(\"/\")\n    setReady(true)\n  }, [])\n\n  return ready ? (\n    <Breadcrumbs.Provider>\n      <ProjectsStore.Provider>\n        <Box width=\"100%\" height=\"100%\" flexDirection=\"column\">\n          <SceneHeader />\n          <AuthenticatedRouter />\n        </Box>\n      </ProjectsStore.Provider>\n    </Breadcrumbs.Provider>\n  ) : null\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<StoreWrapper />, rootElement)\n"],"sourceRoot":""}